{"ast":null,"code":"/**\n * @license React\n * react.development.js\n *\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nif (process.env.NODE_ENV !== \"production\") {\n  (function () {\n    'use strict';\n\n    /* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */\n    if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== 'undefined' && typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart === 'function') {\n      __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart(new Error());\n    }\n    var ReactVersion = '18.3.0-next-fecc288b7-20221025';\n\n    // ATTENTION\n    // When adding new symbols to this file,\n    // Please consider also adding to 'react-devtools-shared/src/backend/ReactSymbols'\n    // The Symbol used to tag the ReactElement-like types.\n    var REACT_ELEMENT_TYPE = Symbol.for('react.element');\n    var REACT_PORTAL_TYPE = Symbol.for('react.portal');\n    var REACT_FRAGMENT_TYPE = Symbol.for('react.fragment');\n    var REACT_STRICT_MODE_TYPE = Symbol.for('react.strict_mode');\n    var REACT_PROFILER_TYPE = Symbol.for('react.profiler');\n    var REACT_PROVIDER_TYPE = Symbol.for('react.provider');\n    var REACT_CONTEXT_TYPE = Symbol.for('react.context');\n    var REACT_SERVER_CONTEXT_TYPE = Symbol.for('react.server_context');\n    var REACT_FORWARD_REF_TYPE = Symbol.for('react.forward_ref');\n    var REACT_SUSPENSE_TYPE = Symbol.for('react.suspense');\n    var REACT_SUSPENSE_LIST_TYPE = Symbol.for('react.suspense_list');\n    var REACT_MEMO_TYPE = Symbol.for('react.memo');\n    var REACT_LAZY_TYPE = Symbol.for('react.lazy');\n    var REACT_OFFSCREEN_TYPE = Symbol.for('react.offscreen');\n    var REACT_CACHE_TYPE = Symbol.for('react.cache');\n    var REACT_SERVER_CONTEXT_DEFAULT_VALUE_NOT_LOADED = Symbol.for('react.default_value');\n    var MAYBE_ITERATOR_SYMBOL = Symbol.iterator;\n    var FAUX_ITERATOR_SYMBOL = '@@iterator';\n    function getIteratorFn(maybeIterable) {\n      if (maybeIterable === null || typeof maybeIterable !== 'object') {\n        return null;\n      }\n      var maybeIterator = MAYBE_ITERATOR_SYMBOL && maybeIterable[MAYBE_ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL];\n      if (typeof maybeIterator === 'function') {\n        return maybeIterator;\n      }\n      return null;\n    }\n\n    /**\n     * Keeps track of the current dispatcher.\n     */\n    var ReactCurrentDispatcher = {\n      current: null\n    };\n\n    /**\n     * Keeps track of the current Cache dispatcher.\n     */\n    var ReactCurrentCache = {\n      current: null\n    };\n\n    /**\n     * Keeps track of the current batch's configuration such as how long an update\n     * should suspend for if it needs to.\n     */\n    var ReactCurrentBatchConfig = {\n      transition: null\n    };\n    var ReactCurrentActQueue = {\n      current: null,\n      // Used to reproduce behavior of `batchedUpdates` in legacy mode.\n      isBatchingLegacy: false,\n      didScheduleLegacyUpdate: false,\n      // Tracks whether something called `use` during the current batch of work.\n      // Determines whether we should yield to microtasks to unwrap already resolved\n      // promises without suspending.\n      didUsePromise: false\n    };\n\n    /**\n     * Keeps track of the current owner.\n     *\n     * The current owner is the component who should own any components that are\n     * currently being constructed.\n     */\n    var ReactCurrentOwner = {\n      /**\n       * @internal\n       * @type {ReactComponent}\n       */\n      current: null\n    };\n    var ReactDebugCurrentFrame =\n    // $FlowFixMe[incompatible-exact]\n    {};\n    var currentExtraStackFrame = null;\n    function setExtraStackFrame(stack) {\n      {\n        currentExtraStackFrame = stack;\n      }\n    }\n    {\n      ReactDebugCurrentFrame.setExtraStackFrame = function (stack) {\n        {\n          currentExtraStackFrame = stack;\n        }\n      }; // Stack implementation injected by the current renderer.\n\n      ReactDebugCurrentFrame.getCurrentStack = null;\n      ReactDebugCurrentFrame.getStackAddendum = function () {\n        var stack = ''; // Add an extra top frame while an element is being validated\n\n        if (currentExtraStackFrame) {\n          stack += currentExtraStackFrame;\n        } // Delegate to the injected renderer-specific implementation\n\n        var impl = ReactDebugCurrentFrame.getCurrentStack;\n        if (impl) {\n          stack += impl() || '';\n        }\n        return stack;\n      };\n    }\n\n    // -----------------------------------------------------------------------------\n\n    var enableScopeAPI = false; // Experimental Create Event Handle API.\n    var enableCacheElement = false;\n    var enableTransitionTracing = false; // No known bugs, but needs performance testing\n\n    var enableLegacyHidden = false; // Enables unstable_avoidThisFallback feature in Fiber\n    // stuff. Intended to enable React core members to more easily debug scheduling\n    // issues in DEV builds.\n\n    var enableDebugTracing = false; // Track which Fiber(s) schedule render work.\n\n    var ContextRegistry = {};\n    var ReactSharedInternals = {\n      ReactCurrentDispatcher: ReactCurrentDispatcher,\n      ReactCurrentCache: ReactCurrentCache,\n      ReactCurrentBatchConfig: ReactCurrentBatchConfig,\n      ReactCurrentOwner: ReactCurrentOwner\n    };\n    {\n      ReactSharedInternals.ReactDebugCurrentFrame = ReactDebugCurrentFrame;\n      ReactSharedInternals.ReactCurrentActQueue = ReactCurrentActQueue;\n    }\n    {\n      ReactSharedInternals.ContextRegistry = ContextRegistry;\n    }\n\n    // by calls to these methods by a Babel plugin.\n    //\n    // In PROD (or in packages without access to React internals),\n    // they are left as they are instead.\n\n    function warn(format) {\n      {\n        {\n          for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n            args[_key - 1] = arguments[_key];\n          }\n          printWarning('warn', format, args);\n        }\n      }\n    }\n    function error(format) {\n      {\n        {\n          for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n            args[_key2 - 1] = arguments[_key2];\n          }\n          printWarning('error', format, args);\n        }\n      }\n    }\n    function printWarning(level, format, args) {\n      // When changing this logic, you might want to also\n      // update consoleWithStackDev.www.js as well.\n      {\n        var ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;\n        var stack = ReactDebugCurrentFrame.getStackAddendum();\n        if (stack !== '') {\n          format += '%s';\n          args = args.concat([stack]);\n        } // eslint-disable-next-line react-internal/safe-string-coercion\n\n        var argsWithFormat = args.map(function (item) {\n          return String(item);\n        }); // Careful: RN currently depends on this prefix\n\n        argsWithFormat.unshift('Warning: ' + format); // We intentionally don't use spread (or .apply) directly because it\n        // breaks IE9: https://github.com/facebook/react/issues/13610\n        // eslint-disable-next-line react-internal/no-production-logging\n\n        Function.prototype.apply.call(console[level], console, argsWithFormat);\n      }\n    }\n    var didWarnStateUpdateForUnmountedComponent = {};\n    function warnNoop(publicInstance, callerName) {\n      {\n        var _constructor = publicInstance.constructor;\n        var componentName = _constructor && (_constructor.displayName || _constructor.name) || 'ReactClass';\n        var warningKey = componentName + \".\" + callerName;\n        if (didWarnStateUpdateForUnmountedComponent[warningKey]) {\n          return;\n        }\n        error(\"Can't call %s on a component that is not yet mounted. \" + 'This is a no-op, but it might indicate a bug in your application. ' + 'Instead, assign to `this.state` directly or define a `state = {};` ' + 'class property with the desired state in the %s component.', callerName, componentName);\n        didWarnStateUpdateForUnmountedComponent[warningKey] = true;\n      }\n    }\n    /**\n     * This is the abstract API for an update queue.\n     */\n\n    var ReactNoopUpdateQueue = {\n      /**\n       * Checks whether or not this composite component is mounted.\n       * @param {ReactClass} publicInstance The instance we want to test.\n       * @return {boolean} True if mounted, false otherwise.\n       * @protected\n       * @final\n       */\n      isMounted: function isMounted(publicInstance) {\n        return false;\n      },\n      /**\n       * Forces an update. This should only be invoked when it is known with\n       * certainty that we are **not** in a DOM transaction.\n       *\n       * You may want to call this when you know that some deeper aspect of the\n       * component's state has changed but `setState` was not called.\n       *\n       * This will not invoke `shouldComponentUpdate`, but it will invoke\n       * `componentWillUpdate` and `componentDidUpdate`.\n       *\n       * @param {ReactClass} publicInstance The instance that should rerender.\n       * @param {?function} callback Called after component is updated.\n       * @param {?string} callerName name of the calling function in the public API.\n       * @internal\n       */\n      enqueueForceUpdate: function enqueueForceUpdate(publicInstance, callback, callerName) {\n        warnNoop(publicInstance, 'forceUpdate');\n      },\n      /**\n       * Replaces all of the state. Always use this or `setState` to mutate state.\n       * You should treat `this.state` as immutable.\n       *\n       * There is no guarantee that `this.state` will be immediately updated, so\n       * accessing `this.state` after calling this method may return the old value.\n       *\n       * @param {ReactClass} publicInstance The instance that should rerender.\n       * @param {object} completeState Next state.\n       * @param {?function} callback Called after component is updated.\n       * @param {?string} callerName name of the calling function in the public API.\n       * @internal\n       */\n      enqueueReplaceState: function enqueueReplaceState(publicInstance, completeState, callback, callerName) {\n        warnNoop(publicInstance, 'replaceState');\n      },\n      /**\n       * Sets a subset of the state. This only exists because _pendingState is\n       * internal. This provides a merging strategy that is not available to deep\n       * properties which is confusing. TODO: Expose pendingState or don't use it\n       * during the merge.\n       *\n       * @param {ReactClass} publicInstance The instance that should rerender.\n       * @param {object} partialState Next partial state to be merged with state.\n       * @param {?function} callback Called after component is updated.\n       * @param {?string} Name of the calling function in the public API.\n       * @internal\n       */\n      enqueueSetState: function enqueueSetState(publicInstance, partialState, callback, callerName) {\n        warnNoop(publicInstance, 'setState');\n      }\n    };\n    var assign = Object.assign;\n    var emptyObject = {};\n    {\n      Object.freeze(emptyObject);\n    }\n    /**\n     * Base class helpers for the updating state of a component.\n     */\n\n    function Component(props, context, updater) {\n      this.props = props;\n      this.context = context; // If a component has string refs, we will assign a different object later.\n\n      this.refs = emptyObject; // We initialize the default updater but the real one gets injected by the\n      // renderer.\n\n      this.updater = updater || ReactNoopUpdateQueue;\n    }\n    Component.prototype.isReactComponent = {};\n    /**\n     * Sets a subset of the state. Always use this to mutate\n     * state. You should treat `this.state` as immutable.\n     *\n     * There is no guarantee that `this.state` will be immediately updated, so\n     * accessing `this.state` after calling this method may return the old value.\n     *\n     * There is no guarantee that calls to `setState` will run synchronously,\n     * as they may eventually be batched together.  You can provide an optional\n     * callback that will be executed when the call to setState is actually\n     * completed.\n     *\n     * When a function is provided to setState, it will be called at some point in\n     * the future (not synchronously). It will be called with the up to date\n     * component arguments (state, props, context). These values can be different\n     * from this.* because your function may be called after receiveProps but before\n     * shouldComponentUpdate, and this new state, props, and context will not yet be\n     * assigned to this.\n     *\n     * @param {object|function} partialState Next partial state or function to\n     *        produce next partial state to be merged with current state.\n     * @param {?function} callback Called after state is updated.\n     * @final\n     * @protected\n     */\n\n    Component.prototype.setState = function (partialState, callback) {\n      if (typeof partialState !== 'object' && typeof partialState !== 'function' && partialState != null) {\n        throw new Error('setState(...): takes an object of state variables to update or a ' + 'function which returns an object of state variables.');\n      }\n      this.updater.enqueueSetState(this, partialState, callback, 'setState');\n    };\n    /**\n     * Forces an update. This should only be invoked when it is known with\n     * certainty that we are **not** in a DOM transaction.\n     *\n     * You may want to call this when you know that some deeper aspect of the\n     * component's state has changed but `setState` was not called.\n     *\n     * This will not invoke `shouldComponentUpdate`, but it will invoke\n     * `componentWillUpdate` and `componentDidUpdate`.\n     *\n     * @param {?function} callback Called after update is complete.\n     * @final\n     * @protected\n     */\n\n    Component.prototype.forceUpdate = function (callback) {\n      this.updater.enqueueForceUpdate(this, callback, 'forceUpdate');\n    };\n    /**\n     * Deprecated APIs. These APIs used to exist on classic React classes but since\n     * we would like to deprecate them, we're not going to move them over to this\n     * modern base class. Instead, we define a getter that warns if it's accessed.\n     */\n\n    {\n      var deprecatedAPIs = {\n        isMounted: ['isMounted', 'Instead, make sure to clean up subscriptions and pending requests in ' + 'componentWillUnmount to prevent memory leaks.'],\n        replaceState: ['replaceState', 'Refactor your code to use setState instead (see ' + 'https://github.com/facebook/react/issues/3236).']\n      };\n      var defineDeprecationWarning = function defineDeprecationWarning(methodName, info) {\n        Object.defineProperty(Component.prototype, methodName, {\n          get: function get() {\n            warn('%s(...) is deprecated in plain JavaScript React classes. %s', info[0], info[1]);\n            return undefined;\n          }\n        });\n      };\n      for (var fnName in deprecatedAPIs) {\n        if (deprecatedAPIs.hasOwnProperty(fnName)) {\n          defineDeprecationWarning(fnName, deprecatedAPIs[fnName]);\n        }\n      }\n    }\n    function ComponentDummy() {}\n    ComponentDummy.prototype = Component.prototype;\n    /**\n     * Convenience component with default shallow equality check for sCU.\n     */\n\n    function PureComponent(props, context, updater) {\n      this.props = props;\n      this.context = context; // If a component has string refs, we will assign a different object later.\n\n      this.refs = emptyObject;\n      this.updater = updater || ReactNoopUpdateQueue;\n    }\n    var pureComponentPrototype = PureComponent.prototype = new ComponentDummy();\n    pureComponentPrototype.constructor = PureComponent; // Avoid an extra prototype jump for these methods.\n\n    assign(pureComponentPrototype, Component.prototype);\n    pureComponentPrototype.isPureReactComponent = true;\n\n    // an immutable object with a single mutable value\n    function createRef() {\n      var refObject = {\n        current: null\n      };\n      {\n        Object.seal(refObject);\n      }\n      return refObject;\n    }\n    var isArrayImpl = Array.isArray; // eslint-disable-next-line no-redeclare\n\n    function isArray(a) {\n      return isArrayImpl(a);\n    }\n\n    /*\n     * The `'' + value` pattern (used in perf-sensitive code) throws for Symbol\n     * and Temporal.* types. See https://github.com/facebook/react/pull/22064.\n     *\n     * The functions in this module will throw an easier-to-understand,\n     * easier-to-debug exception with a clear errors message message explaining the\n     * problem. (Instead of a confusing exception thrown inside the implementation\n     * of the `value` object).\n     */\n    // $FlowFixMe only called in DEV, so void return is not possible.\n    function typeName(value) {\n      {\n        // toStringTag is needed for namespaced types like Temporal.Instant\n        var hasToStringTag = typeof Symbol === 'function' && Symbol.toStringTag;\n        var type = hasToStringTag && value[Symbol.toStringTag] || value.constructor.name || 'Object'; // $FlowFixMe\n\n        return type;\n      }\n    } // $FlowFixMe only called in DEV, so void return is not possible.\n\n    function willCoercionThrow(value) {\n      {\n        try {\n          testStringCoercion(value);\n          return false;\n        } catch (e) {\n          return true;\n        }\n      }\n    }\n    function testStringCoercion(value) {\n      // If you ended up here by following an exception call stack, here's what's\n      // happened: you supplied an object or symbol value to React (as a prop, key,\n      // DOM attribute, CSS property, string ref, etc.) and when React tried to\n      // coerce it to a string using `'' + value`, an exception was thrown.\n      //\n      // The most common types that will cause this exception are `Symbol` instances\n      // and Temporal objects like `Temporal.Instant`. But any object that has a\n      // `valueOf` or `[Symbol.toPrimitive]` method that throws will also cause this\n      // exception. (Library authors do this to prevent users from using built-in\n      // numeric operators like `+` or comparison operators like `>=` because custom\n      // methods are needed to perform accurate arithmetic or comparison.)\n      //\n      // To fix the problem, coerce this object or symbol value to a string before\n      // passing it to React. The most reliable way is usually `String(value)`.\n      //\n      // To find which value is throwing, check the browser or debugger console.\n      // Before this exception was thrown, there should be `console.error` output\n      // that shows the type (Symbol, Temporal.PlainDate, etc.) that caused the\n      // problem and how that type was used: key, atrribute, input value prop, etc.\n      // In most cases, this console output also shows the component and its\n      // ancestor components where the exception happened.\n      //\n      // eslint-disable-next-line react-internal/safe-string-coercion\n      return '' + value;\n    }\n    function checkKeyStringCoercion(value) {\n      {\n        if (willCoercionThrow(value)) {\n          error('The provided key is an unsupported type %s.' + ' This value must be coerced to a string before before using it here.', typeName(value));\n          return testStringCoercion(value); // throw (to help callers find troubleshooting comments)\n        }\n      }\n    }\n\n    function getWrappedName(outerType, innerType, wrapperName) {\n      var displayName = outerType.displayName;\n      if (displayName) {\n        return displayName;\n      }\n      var functionName = innerType.displayName || innerType.name || '';\n      return functionName !== '' ? wrapperName + \"(\" + functionName + \")\" : wrapperName;\n    } // Keep in sync with react-reconciler/getComponentNameFromFiber\n\n    function getContextName(type) {\n      return type.displayName || 'Context';\n    } // Note that the reconciler package should generally prefer to use getComponentNameFromFiber() instead.\n\n    function getComponentNameFromType(type) {\n      if (type == null) {\n        // Host root, text node or just invalid type.\n        return null;\n      }\n      {\n        if (typeof type.tag === 'number') {\n          error('Received an unexpected object in getComponentNameFromType(). ' + 'This is likely a bug in React. Please file an issue.');\n        }\n      }\n      if (typeof type === 'function') {\n        return type.displayName || type.name || null;\n      }\n      if (typeof type === 'string') {\n        return type;\n      }\n      switch (type) {\n        case REACT_FRAGMENT_TYPE:\n          return 'Fragment';\n        case REACT_PORTAL_TYPE:\n          return 'Portal';\n        case REACT_PROFILER_TYPE:\n          return 'Profiler';\n        case REACT_STRICT_MODE_TYPE:\n          return 'StrictMode';\n        case REACT_SUSPENSE_TYPE:\n          return 'Suspense';\n        case REACT_SUSPENSE_LIST_TYPE:\n          return 'SuspenseList';\n        case REACT_CACHE_TYPE:\n          {\n            return 'Cache';\n          }\n      }\n      if (typeof type === 'object') {\n        switch (type.$$typeof) {\n          case REACT_CONTEXT_TYPE:\n            var context = type;\n            return getContextName(context) + '.Consumer';\n          case REACT_PROVIDER_TYPE:\n            var provider = type;\n            return getContextName(provider._context) + '.Provider';\n          case REACT_FORWARD_REF_TYPE:\n            return getWrappedName(type, type.render, 'ForwardRef');\n          case REACT_MEMO_TYPE:\n            var outerName = type.displayName || null;\n            if (outerName !== null) {\n              return outerName;\n            }\n            return getComponentNameFromType(type.type) || 'Memo';\n          case REACT_LAZY_TYPE:\n            {\n              var lazyComponent = type;\n              var payload = lazyComponent._payload;\n              var init = lazyComponent._init;\n              try {\n                return getComponentNameFromType(init(payload));\n              } catch (x) {\n                return null;\n              }\n            }\n          case REACT_SERVER_CONTEXT_TYPE:\n            {\n              var context2 = type;\n              return (context2.displayName || context2._globalName) + '.Provider';\n            }\n\n          // eslint-disable-next-line no-fallthrough\n        }\n      }\n\n      return null;\n    }\n\n    // $FlowFixMe[method-unbinding]\n    var hasOwnProperty = Object.prototype.hasOwnProperty;\n    var RESERVED_PROPS = {\n      key: true,\n      ref: true,\n      __self: true,\n      __source: true\n    };\n    var specialPropKeyWarningShown, specialPropRefWarningShown, didWarnAboutStringRefs;\n    {\n      didWarnAboutStringRefs = {};\n    }\n    function hasValidRef(config) {\n      {\n        if (hasOwnProperty.call(config, 'ref')) {\n          var getter = Object.getOwnPropertyDescriptor(config, 'ref').get;\n          if (getter && getter.isReactWarning) {\n            return false;\n          }\n        }\n      }\n      return config.ref !== undefined;\n    }\n    function hasValidKey(config) {\n      {\n        if (hasOwnProperty.call(config, 'key')) {\n          var getter = Object.getOwnPropertyDescriptor(config, 'key').get;\n          if (getter && getter.isReactWarning) {\n            return false;\n          }\n        }\n      }\n      return config.key !== undefined;\n    }\n    function defineKeyPropWarningGetter(props, displayName) {\n      var warnAboutAccessingKey = function warnAboutAccessingKey() {\n        {\n          if (!specialPropKeyWarningShown) {\n            specialPropKeyWarningShown = true;\n            error('%s: `key` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://reactjs.org/link/special-props)', displayName);\n          }\n        }\n      };\n      warnAboutAccessingKey.isReactWarning = true;\n      Object.defineProperty(props, 'key', {\n        get: warnAboutAccessingKey,\n        configurable: true\n      });\n    }\n    function defineRefPropWarningGetter(props, displayName) {\n      var warnAboutAccessingRef = function warnAboutAccessingRef() {\n        {\n          if (!specialPropRefWarningShown) {\n            specialPropRefWarningShown = true;\n            error('%s: `ref` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://reactjs.org/link/special-props)', displayName);\n          }\n        }\n      };\n      warnAboutAccessingRef.isReactWarning = true;\n      Object.defineProperty(props, 'ref', {\n        get: warnAboutAccessingRef,\n        configurable: true\n      });\n    }\n    function warnIfStringRefCannotBeAutoConverted(config) {\n      {\n        if (typeof config.ref === 'string' && ReactCurrentOwner.current && config.__self && ReactCurrentOwner.current.stateNode !== config.__self) {\n          var componentName = getComponentNameFromType(ReactCurrentOwner.current.type);\n          if (!didWarnAboutStringRefs[componentName]) {\n            error('Component \"%s\" contains the string ref \"%s\". ' + 'Support for string refs will be removed in a future major release. ' + 'This case cannot be automatically converted to an arrow function. ' + 'We ask you to manually fix this case by using useRef() or createRef() instead. ' + 'Learn more about using refs safely here: ' + 'https://reactjs.org/link/strict-mode-string-ref', componentName, config.ref);\n            didWarnAboutStringRefs[componentName] = true;\n          }\n        }\n      }\n    }\n    /**\n     * Factory method to create a new React element. This no longer adheres to\n     * the class pattern, so do not use new to call it. Also, instanceof check\n     * will not work. Instead test $$typeof field against Symbol.for('react.element') to check\n     * if something is a React Element.\n     *\n     * @param {*} type\n     * @param {*} props\n     * @param {*} key\n     * @param {string|object} ref\n     * @param {*} owner\n     * @param {*} self A *temporary* helper to detect places where `this` is\n     * different from the `owner` when React.createElement is called, so that we\n     * can warn. We want to get rid of owner and replace string `ref`s with arrow\n     * functions, and as long as `this` and owner are the same, there will be no\n     * change in behavior.\n     * @param {*} source An annotation object (added by a transpiler or otherwise)\n     * indicating filename, line number, and/or other information.\n     * @internal\n     */\n\n    var ReactElement = function ReactElement(type, key, ref, self, source, owner, props) {\n      var element = {\n        // This tag allows us to uniquely identify this as a React Element\n        $$typeof: REACT_ELEMENT_TYPE,\n        // Built-in properties that belong on the element\n        type: type,\n        key: key,\n        ref: ref,\n        props: props,\n        // Record the component responsible for creating this element.\n        _owner: owner\n      };\n      {\n        // The validation flag is currently mutative. We put it on\n        // an external backing store so that we can freeze the whole object.\n        // This can be replaced with a WeakMap once they are implemented in\n        // commonly used development environments.\n        element._store = {}; // To make comparing ReactElements easier for testing purposes, we make\n        // the validation flag non-enumerable (where possible, which should\n        // include every environment we run tests in), so the test framework\n        // ignores it.\n\n        Object.defineProperty(element._store, 'validated', {\n          configurable: false,\n          enumerable: false,\n          writable: true,\n          value: false\n        }); // self and source are DEV only properties.\n\n        Object.defineProperty(element, '_self', {\n          configurable: false,\n          enumerable: false,\n          writable: false,\n          value: self\n        }); // Two elements created in two different places should be considered\n        // equal for testing purposes and therefore we hide it from enumeration.\n\n        Object.defineProperty(element, '_source', {\n          configurable: false,\n          enumerable: false,\n          writable: false,\n          value: source\n        });\n        if (Object.freeze) {\n          Object.freeze(element.props);\n          Object.freeze(element);\n        }\n      }\n      return element;\n    };\n    /**\n     * Create and return a new ReactElement of the given type.\n     * See https://reactjs.org/docs/react-api.html#createelement\n     */\n\n    function createElement(type, config, children) {\n      var propName; // Reserved names are extracted\n\n      var props = {};\n      var key = null;\n      var ref = null;\n      var self = null;\n      var source = null;\n      if (config != null) {\n        if (hasValidRef(config)) {\n          ref = config.ref;\n          {\n            warnIfStringRefCannotBeAutoConverted(config);\n          }\n        }\n        if (hasValidKey(config)) {\n          {\n            checkKeyStringCoercion(config.key);\n          }\n          key = '' + config.key;\n        }\n        self = config.__self === undefined ? null : config.__self;\n        source = config.__source === undefined ? null : config.__source; // Remaining properties are added to a new props object\n\n        for (propName in config) {\n          if (hasOwnProperty.call(config, propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {\n            props[propName] = config[propName];\n          }\n        }\n      } // Children can be more than one argument, and those are transferred onto\n      // the newly allocated props object.\n\n      var childrenLength = arguments.length - 2;\n      if (childrenLength === 1) {\n        props.children = children;\n      } else if (childrenLength > 1) {\n        var childArray = Array(childrenLength);\n        for (var i = 0; i < childrenLength; i++) {\n          childArray[i] = arguments[i + 2];\n        }\n        {\n          if (Object.freeze) {\n            Object.freeze(childArray);\n          }\n        }\n        props.children = childArray;\n      } // Resolve default props\n\n      if (type && type.defaultProps) {\n        var defaultProps = type.defaultProps;\n        for (propName in defaultProps) {\n          if (props[propName] === undefined) {\n            props[propName] = defaultProps[propName];\n          }\n        }\n      }\n      {\n        if (key || ref) {\n          var displayName = typeof type === 'function' ? type.displayName || type.name || 'Unknown' : type;\n          if (key) {\n            defineKeyPropWarningGetter(props, displayName);\n          }\n          if (ref) {\n            defineRefPropWarningGetter(props, displayName);\n          }\n        }\n      }\n      return ReactElement(type, key, ref, self, source, ReactCurrentOwner.current, props);\n    }\n    function cloneAndReplaceKey(oldElement, newKey) {\n      var newElement = ReactElement(oldElement.type, newKey, oldElement.ref, oldElement._self, oldElement._source, oldElement._owner, oldElement.props);\n      return newElement;\n    }\n    /**\n     * Clone and return a new ReactElement using element as the starting point.\n     * See https://reactjs.org/docs/react-api.html#cloneelement\n     */\n\n    function cloneElement(element, config, children) {\n      if (element === null || element === undefined) {\n        throw new Error(\"React.cloneElement(...): The argument must be a React element, but you passed \" + element + \".\");\n      }\n      var propName; // Original props are copied\n\n      var props = assign({}, element.props); // Reserved names are extracted\n\n      var key = element.key;\n      var ref = element.ref; // Self is preserved since the owner is preserved.\n\n      var self = element._self; // Source is preserved since cloneElement is unlikely to be targeted by a\n      // transpiler, and the original source is probably a better indicator of the\n      // true owner.\n\n      var source = element._source; // Owner will be preserved, unless ref is overridden\n\n      var owner = element._owner;\n      if (config != null) {\n        if (hasValidRef(config)) {\n          // Silently steal the ref from the parent.\n          ref = config.ref;\n          owner = ReactCurrentOwner.current;\n        }\n        if (hasValidKey(config)) {\n          {\n            checkKeyStringCoercion(config.key);\n          }\n          key = '' + config.key;\n        } // Remaining properties override existing props\n\n        var defaultProps;\n        if (element.type && element.type.defaultProps) {\n          defaultProps = element.type.defaultProps;\n        }\n        for (propName in config) {\n          if (hasOwnProperty.call(config, propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {\n            if (config[propName] === undefined && defaultProps !== undefined) {\n              // Resolve default props\n              props[propName] = defaultProps[propName];\n            } else {\n              props[propName] = config[propName];\n            }\n          }\n        }\n      } // Children can be more than one argument, and those are transferred onto\n      // the newly allocated props object.\n\n      var childrenLength = arguments.length - 2;\n      if (childrenLength === 1) {\n        props.children = children;\n      } else if (childrenLength > 1) {\n        var childArray = Array(childrenLength);\n        for (var i = 0; i < childrenLength; i++) {\n          childArray[i] = arguments[i + 2];\n        }\n        props.children = childArray;\n      }\n      return ReactElement(element.type, key, ref, self, source, owner, props);\n    }\n    /**\n     * Verifies the object is a ReactElement.\n     * See https://reactjs.org/docs/react-api.html#isvalidelement\n     * @param {?object} object\n     * @return {boolean} True if `object` is a ReactElement.\n     * @final\n     */\n\n    function isValidElement(object) {\n      return typeof object === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;\n    }\n    var SEPARATOR = '.';\n    var SUBSEPARATOR = ':';\n    /**\n     * Escape and wrap key so it is safe to use as a reactid\n     *\n     * @param {string} key to be escaped.\n     * @return {string} the escaped key.\n     */\n\n    function escape(key) {\n      var escapeRegex = /[=:]/g;\n      var escaperLookup = {\n        '=': '=0',\n        ':': '=2'\n      };\n      var escapedString = key.replace(escapeRegex, function (match) {\n        return escaperLookup[match];\n      });\n      return '$' + escapedString;\n    }\n    /**\n     * TODO: Test that a single child and an array with one item have the same key\n     * pattern.\n     */\n\n    var didWarnAboutMaps = false;\n    var userProvidedKeyEscapeRegex = /\\/+/g;\n    function escapeUserProvidedKey(text) {\n      return text.replace(userProvidedKeyEscapeRegex, '$&/');\n    }\n    /**\n     * Generate a key string that identifies a element within a set.\n     *\n     * @param {*} element A element that could contain a manual key.\n     * @param {number} index Index that is used if a manual key is not provided.\n     * @return {string}\n     */\n\n    function getElementKey(element, index) {\n      // Do some typechecking here since we call this blindly. We want to ensure\n      // that we don't block potential future ES APIs.\n      if (typeof element === 'object' && element !== null && element.key != null) {\n        // Explicit key\n        {\n          checkKeyStringCoercion(element.key);\n        }\n        return escape('' + element.key);\n      } // Implicit key determined by the index in the set\n\n      return index.toString(36);\n    }\n    function mapIntoArray(children, array, escapedPrefix, nameSoFar, callback) {\n      var type = typeof children;\n      if (type === 'undefined' || type === 'boolean') {\n        // All of the above are perceived as null.\n        children = null;\n      }\n      var invokeCallback = false;\n      if (children === null) {\n        invokeCallback = true;\n      } else {\n        switch (type) {\n          case 'string':\n          case 'number':\n            invokeCallback = true;\n            break;\n          case 'object':\n            switch (children.$$typeof) {\n              case REACT_ELEMENT_TYPE:\n              case REACT_PORTAL_TYPE:\n                invokeCallback = true;\n            }\n        }\n      }\n      if (invokeCallback) {\n        var _child = children;\n        var mappedChild = callback(_child); // If it's the only child, treat the name as if it was wrapped in an array\n        // so that it's consistent if the number of children grows:\n\n        var childKey = nameSoFar === '' ? SEPARATOR + getElementKey(_child, 0) : nameSoFar;\n        if (isArray(mappedChild)) {\n          var escapedChildKey = '';\n          if (childKey != null) {\n            escapedChildKey = escapeUserProvidedKey(childKey) + '/';\n          }\n          mapIntoArray(mappedChild, array, escapedChildKey, '', function (c) {\n            return c;\n          });\n        } else if (mappedChild != null) {\n          if (isValidElement(mappedChild)) {\n            {\n              // The `if` statement here prevents auto-disabling of the safe\n              // coercion ESLint rule, so we must manually disable it below.\n              // $FlowFixMe Flow incorrectly thinks React.Portal doesn't have a key\n              if (mappedChild.key && (!_child || _child.key !== mappedChild.key)) {\n                checkKeyStringCoercion(mappedChild.key);\n              }\n            }\n            mappedChild = cloneAndReplaceKey(mappedChild,\n            // Keep both the (mapped) and old keys if they differ, just as\n            // traverseAllChildren used to do for objects as children\n            escapedPrefix + (\n            // $FlowFixMe Flow incorrectly thinks React.Portal doesn't have a key\n            mappedChild.key && (!_child || _child.key !== mappedChild.key) ? escapeUserProvidedKey(\n            // eslint-disable-next-line react-internal/safe-string-coercion\n            '' +\n            // $FlowFixMe Flow incorrectly thinks existing element's key can be a number\n            mappedChild.key) + '/' : '') + childKey);\n          }\n          array.push(mappedChild);\n        }\n        return 1;\n      }\n      var child;\n      var nextName;\n      var subtreeCount = 0; // Count of children found in the current subtree.\n\n      var nextNamePrefix = nameSoFar === '' ? SEPARATOR : nameSoFar + SUBSEPARATOR;\n      if (isArray(children)) {\n        for (var i = 0; i < children.length; i++) {\n          child = children[i];\n          nextName = nextNamePrefix + getElementKey(child, i);\n          subtreeCount += mapIntoArray(child, array, escapedPrefix, nextName, callback);\n        }\n      } else {\n        var iteratorFn = getIteratorFn(children);\n        if (typeof iteratorFn === 'function') {\n          var iterableChildren = children;\n          {\n            // Warn about using Maps as children\n            if (iteratorFn === iterableChildren.entries) {\n              if (!didWarnAboutMaps) {\n                warn('Using Maps as children is not supported. ' + 'Use an array of keyed ReactElements instead.');\n              }\n              didWarnAboutMaps = true;\n            }\n          }\n          var iterator = iteratorFn.call(iterableChildren);\n          var step;\n          var ii = 0; // $FlowFixMe `iteratorFn` might return null according to typing.\n\n          while (!(step = iterator.next()).done) {\n            child = step.value;\n            nextName = nextNamePrefix + getElementKey(child, ii++);\n            subtreeCount += mapIntoArray(child, array, escapedPrefix, nextName, callback);\n          }\n        } else if (type === 'object') {\n          // eslint-disable-next-line react-internal/safe-string-coercion\n          var childrenString = String(children);\n          throw new Error(\"Objects are not valid as a React child (found: \" + (childrenString === '[object Object]' ? 'object with keys {' + Object.keys(children).join(', ') + '}' : childrenString) + \"). \" + 'If you meant to render a collection of children, use an array ' + 'instead.');\n        }\n      }\n      return subtreeCount;\n    }\n\n    /**\n     * Maps children that are typically specified as `props.children`.\n     *\n     * See https://reactjs.org/docs/react-api.html#reactchildrenmap\n     *\n     * The provided mapFunction(child, index) will be called for each\n     * leaf child.\n     *\n     * @param {?*} children Children tree container.\n     * @param {function(*, int)} func The map function.\n     * @param {*} context Context for mapFunction.\n     * @return {object} Object containing the ordered map of results.\n     */\n    function mapChildren(children, func, context) {\n      if (children == null) {\n        return children;\n      }\n      var result = [];\n      var count = 0;\n      mapIntoArray(children, result, '', '', function (child) {\n        return func.call(context, child, count++);\n      });\n      return result;\n    }\n    /**\n     * Count the number of children that are typically specified as\n     * `props.children`.\n     *\n     * See https://reactjs.org/docs/react-api.html#reactchildrencount\n     *\n     * @param {?*} children Children tree container.\n     * @return {number} The number of children.\n     */\n\n    function countChildren(children) {\n      var n = 0;\n      mapChildren(children, function () {\n        n++; // Don't return anything\n      });\n\n      return n;\n    }\n\n    /**\n     * Iterates through children that are typically specified as `props.children`.\n     *\n     * See https://reactjs.org/docs/react-api.html#reactchildrenforeach\n     *\n     * The provided forEachFunc(child, index) will be called for each\n     * leaf child.\n     *\n     * @param {?*} children Children tree container.\n     * @param {function(*, int)} forEachFunc\n     * @param {*} forEachContext Context for forEachContext.\n     */\n    function forEachChildren(children, forEachFunc, forEachContext) {\n      mapChildren(children, function () {\n        forEachFunc.apply(this, arguments); // Don't return anything.\n      }, forEachContext);\n    }\n    /**\n     * Flatten a children object (typically specified as `props.children`) and\n     * return an array with appropriately re-keyed children.\n     *\n     * See https://reactjs.org/docs/react-api.html#reactchildrentoarray\n     */\n\n    function toArray(children) {\n      return mapChildren(children, function (child) {\n        return child;\n      }) || [];\n    }\n    /**\n     * Returns the first child in a collection of children and verifies that there\n     * is only one child in the collection.\n     *\n     * See https://reactjs.org/docs/react-api.html#reactchildrenonly\n     *\n     * The current implementation of this function assumes that a single child gets\n     * passed without a wrapper, but the purpose of this helper function is to\n     * abstract away the particular structure of children.\n     *\n     * @param {?object} children Child collection structure.\n     * @return {ReactElement} The first and only `ReactElement` contained in the\n     * structure.\n     */\n\n    function onlyChild(children) {\n      if (!isValidElement(children)) {\n        throw new Error('React.Children.only expected to receive a single React element child.');\n      }\n      return children;\n    }\n    function createContext(defaultValue) {\n      // TODO: Second argument used to be an optional `calculateChangedBits`\n      // function. Warn to reserve for future use?\n      var context = {\n        $$typeof: REACT_CONTEXT_TYPE,\n        // As a workaround to support multiple concurrent renderers, we categorize\n        // some renderers as primary and others as secondary. We only expect\n        // there to be two concurrent renderers at most: React Native (primary) and\n        // Fabric (secondary); React DOM (primary) and React ART (secondary).\n        // Secondary renderers store their context values on separate fields.\n        _currentValue: defaultValue,\n        _currentValue2: defaultValue,\n        // Used to track how many concurrent renderers this context currently\n        // supports within in a single renderer. Such as parallel server rendering.\n        _threadCount: 0,\n        // These are circular\n        Provider: null,\n        Consumer: null,\n        // Add these to use same hidden class in VM as ServerContext\n        _defaultValue: null,\n        _globalName: null\n      };\n      context.Provider = {\n        $$typeof: REACT_PROVIDER_TYPE,\n        _context: context\n      };\n      var hasWarnedAboutUsingNestedContextConsumers = false;\n      var hasWarnedAboutUsingConsumerProvider = false;\n      var hasWarnedAboutDisplayNameOnConsumer = false;\n      {\n        // A separate object, but proxies back to the original context object for\n        // backwards compatibility. It has a different $$typeof, so we can properly\n        // warn for the incorrect usage of Context as a Consumer.\n        var Consumer = {\n          $$typeof: REACT_CONTEXT_TYPE,\n          _context: context\n        }; // $FlowFixMe: Flow complains about not setting a value, which is intentional here\n\n        Object.defineProperties(Consumer, {\n          Provider: {\n            get: function get() {\n              if (!hasWarnedAboutUsingConsumerProvider) {\n                hasWarnedAboutUsingConsumerProvider = true;\n                error('Rendering <Context.Consumer.Provider> is not supported and will be removed in ' + 'a future major release. Did you mean to render <Context.Provider> instead?');\n              }\n              return context.Provider;\n            },\n            set: function set(_Provider) {\n              context.Provider = _Provider;\n            }\n          },\n          _currentValue: {\n            get: function get() {\n              return context._currentValue;\n            },\n            set: function set(_currentValue) {\n              context._currentValue = _currentValue;\n            }\n          },\n          _currentValue2: {\n            get: function get() {\n              return context._currentValue2;\n            },\n            set: function set(_currentValue2) {\n              context._currentValue2 = _currentValue2;\n            }\n          },\n          _threadCount: {\n            get: function get() {\n              return context._threadCount;\n            },\n            set: function set(_threadCount) {\n              context._threadCount = _threadCount;\n            }\n          },\n          Consumer: {\n            get: function get() {\n              if (!hasWarnedAboutUsingNestedContextConsumers) {\n                hasWarnedAboutUsingNestedContextConsumers = true;\n                error('Rendering <Context.Consumer.Consumer> is not supported and will be removed in ' + 'a future major release. Did you mean to render <Context.Consumer> instead?');\n              }\n              return context.Consumer;\n            }\n          },\n          displayName: {\n            get: function get() {\n              return context.displayName;\n            },\n            set: function set(displayName) {\n              if (!hasWarnedAboutDisplayNameOnConsumer) {\n                warn('Setting `displayName` on Context.Consumer has no effect. ' + \"You should set it directly on the context with Context.displayName = '%s'.\", displayName);\n                hasWarnedAboutDisplayNameOnConsumer = true;\n              }\n            }\n          }\n        }); // $FlowFixMe: Flow complains about missing properties because it doesn't understand defineProperty\n\n        context.Consumer = Consumer;\n      }\n      {\n        context._currentRenderer = null;\n        context._currentRenderer2 = null;\n      }\n      return context;\n    }\n    var Uninitialized = -1;\n    var Pending = 0;\n    var Resolved = 1;\n    var Rejected = 2;\n    function lazyInitializer(payload) {\n      if (payload._status === Uninitialized) {\n        var ctor = payload._result;\n        var thenable = ctor(); // Transition to the next state.\n        // This might throw either because it's missing or throws. If so, we treat it\n        // as still uninitialized and try again next time. Which is the same as what\n        // happens if the ctor or any wrappers processing the ctor throws. This might\n        // end up fixing it if the resolution was a concurrency bug.\n\n        thenable.then(function (moduleObject) {\n          if (payload._status === Pending || payload._status === Uninitialized) {\n            // Transition to the next state.\n            var resolved = payload;\n            resolved._status = Resolved;\n            resolved._result = moduleObject;\n          }\n        }, function (error) {\n          if (payload._status === Pending || payload._status === Uninitialized) {\n            // Transition to the next state.\n            var rejected = payload;\n            rejected._status = Rejected;\n            rejected._result = error;\n          }\n        });\n        if (payload._status === Uninitialized) {\n          // In case, we're still uninitialized, then we're waiting for the thenable\n          // to resolve. Set it as pending in the meantime.\n          var pending = payload;\n          pending._status = Pending;\n          pending._result = thenable;\n        }\n      }\n      if (payload._status === Resolved) {\n        var moduleObject = payload._result;\n        {\n          if (moduleObject === undefined) {\n            error('lazy: Expected the result of a dynamic imp' + 'ort() call. ' + 'Instead received: %s\\n\\nYour code should look like: \\n  ' +\n            // Break up imports to avoid accidentally parsing them as dependencies.\n            'const MyComponent = lazy(() => imp' + \"ort('./MyComponent'))\\n\\n\" + 'Did you accidentally put curly braces around the import?', moduleObject);\n          }\n        }\n        {\n          if (!('default' in moduleObject)) {\n            error('lazy: Expected the result of a dynamic imp' + 'ort() call. ' + 'Instead received: %s\\n\\nYour code should look like: \\n  ' +\n            // Break up imports to avoid accidentally parsing them as dependencies.\n            'const MyComponent = lazy(() => imp' + \"ort('./MyComponent'))\", moduleObject);\n          }\n        }\n        return moduleObject.default;\n      } else {\n        throw payload._result;\n      }\n    }\n    function lazy(ctor) {\n      var payload = {\n        // We use these fields to store the result.\n        _status: Uninitialized,\n        _result: ctor\n      };\n      var lazyType = {\n        $$typeof: REACT_LAZY_TYPE,\n        _payload: payload,\n        _init: lazyInitializer\n      };\n      {\n        // In production, this would just set it on the object.\n        var defaultProps;\n        var propTypes; // $FlowFixMe\n\n        Object.defineProperties(lazyType, {\n          defaultProps: {\n            configurable: true,\n            get: function get() {\n              return defaultProps;\n            },\n            set: function set(newDefaultProps) {\n              error('React.lazy(...): It is not supported to assign `defaultProps` to ' + 'a lazy component import. Either specify them where the component ' + 'is defined, or create a wrapping component around it.');\n              defaultProps = newDefaultProps; // Match production behavior more closely:\n              // $FlowFixMe\n\n              Object.defineProperty(lazyType, 'defaultProps', {\n                enumerable: true\n              });\n            }\n          },\n          propTypes: {\n            configurable: true,\n            get: function get() {\n              return propTypes;\n            },\n            set: function set(newPropTypes) {\n              error('React.lazy(...): It is not supported to assign `propTypes` to ' + 'a lazy component import. Either specify them where the component ' + 'is defined, or create a wrapping component around it.');\n              propTypes = newPropTypes; // Match production behavior more closely:\n              // $FlowFixMe\n\n              Object.defineProperty(lazyType, 'propTypes', {\n                enumerable: true\n              });\n            }\n          }\n        });\n      }\n      return lazyType;\n    }\n    function forwardRef(render) {\n      {\n        if (render != null && render.$$typeof === REACT_MEMO_TYPE) {\n          error('forwardRef requires a render function but received a `memo` ' + 'component. Instead of forwardRef(memo(...)), use ' + 'memo(forwardRef(...)).');\n        } else if (typeof render !== 'function') {\n          error('forwardRef requires a render function but was given %s.', render === null ? 'null' : typeof render);\n        } else {\n          if (render.length !== 0 && render.length !== 2) {\n            error('forwardRef render functions accept exactly two parameters: props and ref. %s', render.length === 1 ? 'Did you forget to use the ref parameter?' : 'Any additional parameter will be undefined.');\n          }\n        }\n        if (render != null) {\n          if (render.defaultProps != null || render.propTypes != null) {\n            error('forwardRef render functions do not support propTypes or defaultProps. ' + 'Did you accidentally pass a React component?');\n          }\n        }\n      }\n      var elementType = {\n        $$typeof: REACT_FORWARD_REF_TYPE,\n        render: render\n      };\n      {\n        var ownName;\n        Object.defineProperty(elementType, 'displayName', {\n          enumerable: false,\n          configurable: true,\n          get: function get() {\n            return ownName;\n          },\n          set: function set(name) {\n            ownName = name; // The inner component shouldn't inherit this display name in most cases,\n            // because the component may be used elsewhere.\n            // But it's nice for anonymous functions to inherit the name,\n            // so that our component-stack generation logic will display their frames.\n            // An anonymous function generally suggests a pattern like:\n            //   React.forwardRef((props, ref) => {...});\n            // This kind of inner function is not used elsewhere so the side effect is okay.\n\n            if (!render.name && !render.displayName) {\n              render.displayName = name;\n            }\n          }\n        });\n      }\n      return elementType;\n    }\n    var REACT_MODULE_REFERENCE = Symbol.for('react.module.reference');\n    function isValidElementType(type) {\n      if (typeof type === 'string' || typeof type === 'function') {\n        return true;\n      } // Note: typeof might be other than 'symbol' or 'number' (e.g. if it's a polyfill).\n\n      if (type === REACT_FRAGMENT_TYPE || type === REACT_PROFILER_TYPE || enableDebugTracing || type === REACT_STRICT_MODE_TYPE || type === REACT_SUSPENSE_TYPE || type === REACT_SUSPENSE_LIST_TYPE || enableLegacyHidden || type === REACT_OFFSCREEN_TYPE || enableScopeAPI || enableCacheElement || enableTransitionTracing) {\n        return true;\n      }\n      if (typeof type === 'object' && type !== null) {\n        if (type.$$typeof === REACT_LAZY_TYPE || type.$$typeof === REACT_MEMO_TYPE || type.$$typeof === REACT_PROVIDER_TYPE || type.$$typeof === REACT_CONTEXT_TYPE || type.$$typeof === REACT_FORWARD_REF_TYPE ||\n        // This needs to include all possible module reference object\n        // types supported by any Flight configuration anywhere since\n        // we don't know which Flight build this will end up being used\n        // with.\n        type.$$typeof === REACT_MODULE_REFERENCE || type.getModuleId !== undefined) {\n          return true;\n        }\n      }\n      return false;\n    }\n    function memo(type, compare) {\n      {\n        if (!isValidElementType(type)) {\n          error('memo: The first argument must be a component. Instead ' + 'received: %s', type === null ? 'null' : typeof type);\n        }\n      }\n      var elementType = {\n        $$typeof: REACT_MEMO_TYPE,\n        type: type,\n        compare: compare === undefined ? null : compare\n      };\n      {\n        var ownName;\n        Object.defineProperty(elementType, 'displayName', {\n          enumerable: false,\n          configurable: true,\n          get: function get() {\n            return ownName;\n          },\n          set: function set(name) {\n            ownName = name; // The inner component shouldn't inherit this display name in most cases,\n            // because the component may be used elsewhere.\n            // But it's nice for anonymous functions to inherit the name,\n            // so that our component-stack generation logic will display their frames.\n            // An anonymous function generally suggests a pattern like:\n            //   React.memo((props) => {...});\n            // This kind of inner function is not used elsewhere so the side effect is okay.\n\n            if (!type.name && !type.displayName) {\n              type.displayName = name;\n            }\n          }\n        });\n      }\n      return elementType;\n    }\n    var UNTERMINATED = 0;\n    var TERMINATED = 1;\n    var ERRORED = 2;\n    function createCacheRoot() {\n      return new WeakMap();\n    }\n    function createCacheNode() {\n      return {\n        s: UNTERMINATED,\n        // status, represents whether the cached computation returned a value or threw an error\n        v: undefined,\n        // value, either the cached result or an error, depending on s\n        o: null,\n        // object cache, a WeakMap where non-primitive arguments are stored\n        p: null // primitive cache, a regular Map where primitive arguments are stored.\n      };\n    }\n\n    function cache(fn) {\n      return function () {\n        var dispatcher = ReactCurrentCache.current;\n        if (!dispatcher) {\n          // If there is no dispatcher, then we treat this as not being cached.\n          // $FlowFixMe: We don't want to use rest arguments since we transpile the code.\n          return fn.apply(null, arguments);\n        }\n        var fnMap = dispatcher.getCacheForType(createCacheRoot);\n        var fnNode = fnMap.get(fn);\n        var cacheNode;\n        if (fnNode === undefined) {\n          cacheNode = createCacheNode();\n          fnMap.set(fn, cacheNode);\n        } else {\n          cacheNode = fnNode;\n        }\n        for (var i = 0, l = arguments.length; i < l; i++) {\n          var arg = arguments[i];\n          if (typeof arg === 'function' || typeof arg === 'object' && arg !== null) {\n            // Objects go into a WeakMap\n            var objectCache = cacheNode.o;\n            if (objectCache === null) {\n              cacheNode.o = objectCache = new WeakMap();\n            }\n            var objectNode = objectCache.get(arg);\n            if (objectNode === undefined) {\n              cacheNode = createCacheNode();\n              objectCache.set(arg, cacheNode);\n            } else {\n              cacheNode = objectNode;\n            }\n          } else {\n            // Primitives go into a regular Map\n            var primitiveCache = cacheNode.p;\n            if (primitiveCache === null) {\n              cacheNode.p = primitiveCache = new Map();\n            }\n            var primitiveNode = primitiveCache.get(arg);\n            if (primitiveNode === undefined) {\n              cacheNode = createCacheNode();\n              primitiveCache.set(arg, cacheNode);\n            } else {\n              cacheNode = primitiveNode;\n            }\n          }\n        }\n        if (cacheNode.s === TERMINATED) {\n          return cacheNode.v;\n        }\n        if (cacheNode.s === ERRORED) {\n          throw cacheNode.v;\n        }\n        try {\n          // $FlowFixMe: We don't want to use rest arguments since we transpile the code.\n          var result = fn.apply(null, arguments);\n          var terminatedNode = cacheNode;\n          terminatedNode.s = TERMINATED;\n          terminatedNode.v = result;\n          return result;\n        } catch (error) {\n          // We store the first error that's thrown and rethrow it.\n          var erroredNode = cacheNode;\n          erroredNode.s = ERRORED;\n          erroredNode.v = error;\n          throw error;\n        }\n      };\n    }\n    function resolveDispatcher() {\n      var dispatcher = ReactCurrentDispatcher.current;\n      {\n        if (dispatcher === null) {\n          error('Invalid hook call. Hooks can only be called inside of the body of a function component. This could happen for' + ' one of the following reasons:\\n' + '1. You might have mismatching versions of React and the renderer (such as React DOM)\\n' + '2. You might be breaking the Rules of Hooks\\n' + '3. You might have more than one copy of React in the same app\\n' + 'See https://reactjs.org/link/invalid-hook-call for tips about how to debug and fix this problem.');\n        }\n      } // Will result in a null access error if accessed outside render phase. We\n      // intentionally don't throw our own error because this is in a hot path.\n      // Also helps ensure this is inlined.\n\n      return dispatcher;\n    }\n    function useContext(Context) {\n      var dispatcher = resolveDispatcher();\n      {\n        // TODO: add a more generic warning for invalid values.\n        if (Context._context !== undefined) {\n          var realContext = Context._context; // Don't deduplicate because this legitimately causes bugs\n          // and nobody should be using this in existing code.\n\n          if (realContext.Consumer === Context) {\n            error('Calling useContext(Context.Consumer) is not supported, may cause bugs, and will be ' + 'removed in a future major release. Did you mean to call useContext(Context) instead?');\n          } else if (realContext.Provider === Context) {\n            error('Calling useContext(Context.Provider) is not supported. ' + 'Did you mean to call useContext(Context) instead?');\n          }\n        }\n      }\n      return dispatcher.useContext(Context);\n    }\n    function useState(initialState) {\n      var dispatcher = resolveDispatcher();\n      return dispatcher.useState(initialState);\n    }\n    function useReducer(reducer, initialArg, init) {\n      var dispatcher = resolveDispatcher();\n      return dispatcher.useReducer(reducer, initialArg, init);\n    }\n    function useRef(initialValue) {\n      var dispatcher = resolveDispatcher();\n      return dispatcher.useRef(initialValue);\n    }\n    function useEffect(create, deps) {\n      var dispatcher = resolveDispatcher();\n      return dispatcher.useEffect(create, deps);\n    }\n    function useInsertionEffect(create, deps) {\n      var dispatcher = resolveDispatcher();\n      return dispatcher.useInsertionEffect(create, deps);\n    }\n    function useLayoutEffect(create, deps) {\n      var dispatcher = resolveDispatcher();\n      return dispatcher.useLayoutEffect(create, deps);\n    }\n    function useCallback(callback, deps) {\n      var dispatcher = resolveDispatcher();\n      return dispatcher.useCallback(callback, deps);\n    }\n    function useMemo(create, deps) {\n      var dispatcher = resolveDispatcher();\n      return dispatcher.useMemo(create, deps);\n    }\n    function useImperativeHandle(ref, create, deps) {\n      var dispatcher = resolveDispatcher();\n      return dispatcher.useImperativeHandle(ref, create, deps);\n    }\n    function useDebugValue(value, formatterFn) {\n      {\n        var dispatcher = resolveDispatcher();\n        return dispatcher.useDebugValue(value, formatterFn);\n      }\n    }\n    function useTransition() {\n      var dispatcher = resolveDispatcher();\n      return dispatcher.useTransition();\n    }\n    function useDeferredValue(value) {\n      var dispatcher = resolveDispatcher();\n      return dispatcher.useDeferredValue(value);\n    }\n    function useId() {\n      var dispatcher = resolveDispatcher();\n      return dispatcher.useId();\n    }\n    function useSyncExternalStore(subscribe, getSnapshot, getServerSnapshot) {\n      var dispatcher = resolveDispatcher();\n      return dispatcher.useSyncExternalStore(subscribe, getSnapshot, getServerSnapshot);\n    }\n    function useCacheRefresh() {\n      var dispatcher = resolveDispatcher(); // $FlowFixMe This is unstable, thus optional\n\n      return dispatcher.useCacheRefresh();\n    }\n    function use(usable) {\n      var dispatcher = resolveDispatcher(); // $FlowFixMe This is unstable, thus optional\n\n      return dispatcher.use(usable);\n    }\n\n    // Helpers to patch console.logs to avoid logging during side-effect free\n    // replaying on render function. This currently only patches the object\n    // lazily which won't cover if the log function was extracted eagerly.\n    // We could also eagerly patch the method.\n    var disabledDepth = 0;\n    var prevLog;\n    var prevInfo;\n    var prevWarn;\n    var prevError;\n    var prevGroup;\n    var prevGroupCollapsed;\n    var prevGroupEnd;\n    function disabledLog() {}\n    disabledLog.__reactDisabledLog = true;\n    function disableLogs() {\n      {\n        if (disabledDepth === 0) {\n          /* eslint-disable react-internal/no-production-logging */\n          prevLog = console.log;\n          prevInfo = console.info;\n          prevWarn = console.warn;\n          prevError = console.error;\n          prevGroup = console.group;\n          prevGroupCollapsed = console.groupCollapsed;\n          prevGroupEnd = console.groupEnd; // https://github.com/facebook/react/issues/19099\n\n          var props = {\n            configurable: true,\n            enumerable: true,\n            value: disabledLog,\n            writable: true\n          }; // $FlowFixMe Flow thinks console is immutable.\n\n          Object.defineProperties(console, {\n            info: props,\n            log: props,\n            warn: props,\n            error: props,\n            group: props,\n            groupCollapsed: props,\n            groupEnd: props\n          });\n          /* eslint-enable react-internal/no-production-logging */\n        }\n\n        disabledDepth++;\n      }\n    }\n    function reenableLogs() {\n      {\n        disabledDepth--;\n        if (disabledDepth === 0) {\n          /* eslint-disable react-internal/no-production-logging */\n          var props = {\n            configurable: true,\n            enumerable: true,\n            writable: true\n          }; // $FlowFixMe Flow thinks console is immutable.\n\n          Object.defineProperties(console, {\n            log: assign({}, props, {\n              value: prevLog\n            }),\n            info: assign({}, props, {\n              value: prevInfo\n            }),\n            warn: assign({}, props, {\n              value: prevWarn\n            }),\n            error: assign({}, props, {\n              value: prevError\n            }),\n            group: assign({}, props, {\n              value: prevGroup\n            }),\n            groupCollapsed: assign({}, props, {\n              value: prevGroupCollapsed\n            }),\n            groupEnd: assign({}, props, {\n              value: prevGroupEnd\n            })\n          });\n          /* eslint-enable react-internal/no-production-logging */\n        }\n\n        if (disabledDepth < 0) {\n          error('disabledDepth fell below zero. ' + 'This is a bug in React. Please file an issue.');\n        }\n      }\n    }\n    var ReactCurrentDispatcher$1 = ReactSharedInternals.ReactCurrentDispatcher;\n    var prefix;\n    function describeBuiltInComponentFrame(name, source, ownerFn) {\n      {\n        if (prefix === undefined) {\n          // Extract the VM specific prefix used by each line.\n          try {\n            throw Error();\n          } catch (x) {\n            var match = x.stack.trim().match(/\\n( *(at )?)/);\n            prefix = match && match[1] || '';\n          }\n        } // We use the prefix to ensure our stacks line up with native stack frames.\n\n        return '\\n' + prefix + name;\n      }\n    }\n    var reentry = false;\n    var componentFrameCache;\n    {\n      var PossiblyWeakMap = typeof WeakMap === 'function' ? WeakMap : Map;\n      componentFrameCache = new PossiblyWeakMap();\n    }\n    function describeNativeComponentFrame(fn, construct) {\n      // If something asked for a stack inside a fake render, it should get ignored.\n      if (!fn || reentry) {\n        return '';\n      }\n      {\n        var frame = componentFrameCache.get(fn);\n        if (frame !== undefined) {\n          return frame;\n        }\n      }\n      var control;\n      reentry = true;\n      var previousPrepareStackTrace = Error.prepareStackTrace; // $FlowFixMe It does accept undefined.\n\n      Error.prepareStackTrace = undefined;\n      var previousDispatcher;\n      {\n        previousDispatcher = ReactCurrentDispatcher$1.current; // Set the dispatcher in DEV because this might be call in the render function\n        // for warnings.\n\n        ReactCurrentDispatcher$1.current = null;\n        disableLogs();\n      }\n      try {\n        // This should throw.\n        if (construct) {\n          // Something should be setting the props in the constructor.\n          var Fake = function Fake() {\n            throw Error();\n          }; // $FlowFixMe\n\n          Object.defineProperty(Fake.prototype, 'props', {\n            set: function set() {\n              // We use a throwing setter instead of frozen or non-writable props\n              // because that won't throw in a non-strict mode function.\n              throw Error();\n            }\n          });\n          if (typeof Reflect === 'object' && Reflect.construct) {\n            // We construct a different control for this case to include any extra\n            // frames added by the construct call.\n            try {\n              Reflect.construct(Fake, []);\n            } catch (x) {\n              control = x;\n            }\n            Reflect.construct(fn, [], Fake);\n          } else {\n            try {\n              Fake.call();\n            } catch (x) {\n              control = x;\n            } // $FlowFixMe[prop-missing] found when upgrading Flow\n\n            fn.call(Fake.prototype);\n          }\n        } else {\n          try {\n            throw Error();\n          } catch (x) {\n            control = x;\n          } // TODO(luna): This will currently only throw if the function component\n          // tries to access React/ReactDOM/props. We should probably make this throw\n          // in simple components too\n\n          fn();\n        }\n      } catch (sample) {\n        // This is inlined manually because closure doesn't do it for us.\n        if (sample && control && typeof sample.stack === 'string') {\n          // This extracts the first frame from the sample that isn't also in the control.\n          // Skipping one frame that we assume is the frame that calls the two.\n          var sampleLines = sample.stack.split('\\n');\n          var controlLines = control.stack.split('\\n');\n          var s = sampleLines.length - 1;\n          var c = controlLines.length - 1;\n          while (s >= 1 && c >= 0 && sampleLines[s] !== controlLines[c]) {\n            // We expect at least one stack frame to be shared.\n            // Typically this will be the root most one. However, stack frames may be\n            // cut off due to maximum stack limits. In this case, one maybe cut off\n            // earlier than the other. We assume that the sample is longer or the same\n            // and there for cut off earlier. So we should find the root most frame in\n            // the sample somewhere in the control.\n            c--;\n          }\n          for (; s >= 1 && c >= 0; s--, c--) {\n            // Next we find the first one that isn't the same which should be the\n            // frame that called our sample function and the control.\n            if (sampleLines[s] !== controlLines[c]) {\n              // In V8, the first line is describing the message but other VMs don't.\n              // If we're about to return the first line, and the control is also on the same\n              // line, that's a pretty good indicator that our sample threw at same line as\n              // the control. I.e. before we entered the sample frame. So we ignore this result.\n              // This can happen if you passed a class to function component, or non-function.\n              if (s !== 1 || c !== 1) {\n                do {\n                  s--;\n                  c--; // We may still have similar intermediate frames from the construct call.\n                  // The next one that isn't the same should be our match though.\n\n                  if (c < 0 || sampleLines[s] !== controlLines[c]) {\n                    // V8 adds a \"new\" prefix for native classes. Let's remove it to make it prettier.\n                    var _frame = '\\n' + sampleLines[s].replace(' at new ', ' at '); // If our component frame is labeled \"<anonymous>\"\n                    // but we have a user-provided \"displayName\"\n                    // splice it in to make the stack more readable.\n\n                    if (fn.displayName && _frame.includes('<anonymous>')) {\n                      _frame = _frame.replace('<anonymous>', fn.displayName);\n                    }\n                    {\n                      if (typeof fn === 'function') {\n                        componentFrameCache.set(fn, _frame);\n                      }\n                    } // Return the line we found.\n\n                    return _frame;\n                  }\n                } while (s >= 1 && c >= 0);\n              }\n              break;\n            }\n          }\n        }\n      } finally {\n        reentry = false;\n        {\n          ReactCurrentDispatcher$1.current = previousDispatcher;\n          reenableLogs();\n        }\n        Error.prepareStackTrace = previousPrepareStackTrace;\n      } // Fallback to just using the name if we couldn't make it throw.\n\n      var name = fn ? fn.displayName || fn.name : '';\n      var syntheticFrame = name ? describeBuiltInComponentFrame(name) : '';\n      {\n        if (typeof fn === 'function') {\n          componentFrameCache.set(fn, syntheticFrame);\n        }\n      }\n      return syntheticFrame;\n    }\n    function describeFunctionComponentFrame(fn, source, ownerFn) {\n      {\n        return describeNativeComponentFrame(fn, false);\n      }\n    }\n    function shouldConstruct(Component) {\n      var prototype = Component.prototype;\n      return !!(prototype && prototype.isReactComponent);\n    }\n    function describeUnknownElementTypeFrameInDEV(type, source, ownerFn) {\n      if (type == null) {\n        return '';\n      }\n      if (typeof type === 'function') {\n        {\n          return describeNativeComponentFrame(type, shouldConstruct(type));\n        }\n      }\n      if (typeof type === 'string') {\n        return describeBuiltInComponentFrame(type);\n      }\n      switch (type) {\n        case REACT_SUSPENSE_TYPE:\n          return describeBuiltInComponentFrame('Suspense');\n        case REACT_SUSPENSE_LIST_TYPE:\n          return describeBuiltInComponentFrame('SuspenseList');\n      }\n      if (typeof type === 'object') {\n        switch (type.$$typeof) {\n          case REACT_FORWARD_REF_TYPE:\n            return describeFunctionComponentFrame(type.render);\n          case REACT_MEMO_TYPE:\n            // Memo may contain any component type so we recursively resolve it.\n            return describeUnknownElementTypeFrameInDEV(type.type, source, ownerFn);\n          case REACT_LAZY_TYPE:\n            {\n              var lazyComponent = type;\n              var payload = lazyComponent._payload;\n              var init = lazyComponent._init;\n              try {\n                // Lazy may contain any component type so we recursively resolve it.\n                return describeUnknownElementTypeFrameInDEV(init(payload), source, ownerFn);\n              } catch (x) {}\n            }\n        }\n      }\n      return '';\n    }\n    var loggedTypeFailures = {};\n    var ReactDebugCurrentFrame$1 = ReactSharedInternals.ReactDebugCurrentFrame;\n    function setCurrentlyValidatingElement(element) {\n      {\n        if (element) {\n          var owner = element._owner;\n          var stack = describeUnknownElementTypeFrameInDEV(element.type, element._source, owner ? owner.type : null);\n          ReactDebugCurrentFrame$1.setExtraStackFrame(stack);\n        } else {\n          ReactDebugCurrentFrame$1.setExtraStackFrame(null);\n        }\n      }\n    }\n    function checkPropTypes(typeSpecs, values, location, componentName, element) {\n      {\n        // $FlowFixMe This is okay but Flow doesn't know it.\n        var has = Function.call.bind(hasOwnProperty);\n        for (var typeSpecName in typeSpecs) {\n          if (has(typeSpecs, typeSpecName)) {\n            var error$1 = void 0; // Prop type validation may throw. In case they do, we don't want to\n            // fail the render phase where it didn't fail before. So we log it.\n            // After these have been cleaned up, we'll let them throw.\n\n            try {\n              // This is intentionally an invariant that gets caught. It's the same\n              // behavior as without this statement except with a better message.\n              if (typeof typeSpecs[typeSpecName] !== 'function') {\n                // eslint-disable-next-line react-internal/prod-error-codes\n                var err = Error((componentName || 'React class') + ': ' + location + ' type `' + typeSpecName + '` is invalid; ' + 'it must be a function, usually from the `prop-types` package, but received `' + typeof typeSpecs[typeSpecName] + '`.' + 'This often happens because of typos such as `PropTypes.function` instead of `PropTypes.func`.');\n                err.name = 'Invariant Violation';\n                throw err;\n              }\n              error$1 = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED');\n            } catch (ex) {\n              error$1 = ex;\n            }\n            if (error$1 && !(error$1 instanceof Error)) {\n              setCurrentlyValidatingElement(element);\n              error('%s: type specification of %s' + ' `%s` is invalid; the type checker ' + 'function must return `null` or an `Error` but returned a %s. ' + 'You may have forgotten to pass an argument to the type checker ' + 'creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and ' + 'shape all require an argument).', componentName || 'React class', location, typeSpecName, typeof error$1);\n              setCurrentlyValidatingElement(null);\n            }\n            if (error$1 instanceof Error && !(error$1.message in loggedTypeFailures)) {\n              // Only monitor this failure once because there tends to be a lot of the\n              // same error.\n              loggedTypeFailures[error$1.message] = true;\n              setCurrentlyValidatingElement(element);\n              error('Failed %s type: %s', location, error$1.message);\n              setCurrentlyValidatingElement(null);\n            }\n          }\n        }\n      }\n    }\n    function setCurrentlyValidatingElement$1(element) {\n      {\n        if (element) {\n          var owner = element._owner;\n          var stack = describeUnknownElementTypeFrameInDEV(element.type, element._source, owner ? owner.type : null);\n          setExtraStackFrame(stack);\n        } else {\n          setExtraStackFrame(null);\n        }\n      }\n    }\n    var propTypesMisspellWarningShown;\n    {\n      propTypesMisspellWarningShown = false;\n    }\n    function getDeclarationErrorAddendum() {\n      if (ReactCurrentOwner.current) {\n        var name = getComponentNameFromType(ReactCurrentOwner.current.type);\n        if (name) {\n          return '\\n\\nCheck the render method of `' + name + '`.';\n        }\n      }\n      return '';\n    }\n    function getSourceInfoErrorAddendum(source) {\n      if (source !== undefined) {\n        var fileName = source.fileName.replace(/^.*[\\\\\\/]/, '');\n        var lineNumber = source.lineNumber;\n        return '\\n\\nCheck your code at ' + fileName + ':' + lineNumber + '.';\n      }\n      return '';\n    }\n    function getSourceInfoErrorAddendumForProps(elementProps) {\n      if (elementProps !== null && elementProps !== undefined) {\n        return getSourceInfoErrorAddendum(elementProps.__source);\n      }\n      return '';\n    }\n    /**\n     * Warn if there's no key explicitly set on dynamic arrays of children or\n     * object keys are not valid. This allows us to keep track of children between\n     * updates.\n     */\n\n    var ownerHasKeyUseWarning = {};\n    function getCurrentComponentErrorInfo(parentType) {\n      var info = getDeclarationErrorAddendum();\n      if (!info) {\n        var parentName = typeof parentType === 'string' ? parentType : parentType.displayName || parentType.name;\n        if (parentName) {\n          info = \"\\n\\nCheck the top-level render call using <\" + parentName + \">.\";\n        }\n      }\n      return info;\n    }\n    /**\n     * Warn if the element doesn't have an explicit key assigned to it.\n     * This element is in an array. The array could grow and shrink or be\n     * reordered. All children that haven't already been validated are required to\n     * have a \"key\" property assigned to it. Error statuses are cached so a warning\n     * will only be shown once.\n     *\n     * @internal\n     * @param {ReactElement} element Element that requires a key.\n     * @param {*} parentType element's parent's type.\n     */\n\n    function validateExplicitKey(element, parentType) {\n      if (!element._store || element._store.validated || element.key != null) {\n        return;\n      }\n      element._store.validated = true;\n      var currentComponentErrorInfo = getCurrentComponentErrorInfo(parentType);\n      if (ownerHasKeyUseWarning[currentComponentErrorInfo]) {\n        return;\n      }\n      ownerHasKeyUseWarning[currentComponentErrorInfo] = true; // Usually the current owner is the offender, but if it accepts children as a\n      // property, it may be the creator of the child that's responsible for\n      // assigning it a key.\n\n      var childOwner = '';\n      if (element && element._owner && element._owner !== ReactCurrentOwner.current) {\n        // Give the component that originally created this child.\n        childOwner = \" It was passed a child from \" + getComponentNameFromType(element._owner.type) + \".\";\n      }\n      {\n        setCurrentlyValidatingElement$1(element);\n        error('Each child in a list should have a unique \"key\" prop.' + '%s%s See https://reactjs.org/link/warning-keys for more information.', currentComponentErrorInfo, childOwner);\n        setCurrentlyValidatingElement$1(null);\n      }\n    }\n    /**\n     * Ensure that every element either is passed in a static location, in an\n     * array with an explicit keys property defined, or in an object literal\n     * with valid key property.\n     *\n     * @internal\n     * @param {ReactNode} node Statically passed child of any type.\n     * @param {*} parentType node's parent's type.\n     */\n\n    function validateChildKeys(node, parentType) {\n      if (typeof node !== 'object') {\n        return;\n      }\n      if (isArray(node)) {\n        for (var i = 0; i < node.length; i++) {\n          var child = node[i];\n          if (isValidElement(child)) {\n            validateExplicitKey(child, parentType);\n          }\n        }\n      } else if (isValidElement(node)) {\n        // This element was passed in a valid location.\n        if (node._store) {\n          node._store.validated = true;\n        }\n      } else if (node) {\n        var iteratorFn = getIteratorFn(node);\n        if (typeof iteratorFn === 'function') {\n          // Entry iterators used to provide implicit keys,\n          // but now we print a separate warning for them later.\n          if (iteratorFn !== node.entries) {\n            var iterator = iteratorFn.call(node);\n            var step;\n            while (!(step = iterator.next()).done) {\n              if (isValidElement(step.value)) {\n                validateExplicitKey(step.value, parentType);\n              }\n            }\n          }\n        }\n      }\n    }\n    /**\n     * Given an element, validate that its props follow the propTypes definition,\n     * provided by the type.\n     *\n     * @param {ReactElement} element\n     */\n\n    function validatePropTypes(element) {\n      {\n        var type = element.type;\n        if (type === null || type === undefined || typeof type === 'string') {\n          return;\n        }\n        var propTypes;\n        if (typeof type === 'function') {\n          propTypes = type.propTypes;\n        } else if (typeof type === 'object' && (type.$$typeof === REACT_FORWARD_REF_TYPE ||\n        // Note: Memo only checks outer props here.\n        // Inner props are checked in the reconciler.\n        type.$$typeof === REACT_MEMO_TYPE)) {\n          propTypes = type.propTypes;\n        } else {\n          return;\n        }\n        if (propTypes) {\n          // Intentionally inside to avoid triggering lazy initializers:\n          var name = getComponentNameFromType(type);\n          checkPropTypes(propTypes, element.props, 'prop', name, element);\n        } else if (type.PropTypes !== undefined && !propTypesMisspellWarningShown) {\n          propTypesMisspellWarningShown = true; // Intentionally inside to avoid triggering lazy initializers:\n\n          var _name = getComponentNameFromType(type);\n          error('Component %s declared `PropTypes` instead of `propTypes`. Did you misspell the property assignment?', _name || 'Unknown');\n        }\n        if (typeof type.getDefaultProps === 'function' && !type.getDefaultProps.isReactClassApproved) {\n          error('getDefaultProps is only used on classic React.createClass ' + 'definitions. Use a static property named `defaultProps` instead.');\n        }\n      }\n    }\n    /**\n     * Given a fragment, validate that it can only be provided with fragment props\n     * @param {ReactElement} fragment\n     */\n\n    function validateFragmentProps(fragment) {\n      {\n        var keys = Object.keys(fragment.props);\n        for (var i = 0; i < keys.length; i++) {\n          var key = keys[i];\n          if (key !== 'children' && key !== 'key') {\n            setCurrentlyValidatingElement$1(fragment);\n            error('Invalid prop `%s` supplied to `React.Fragment`. ' + 'React.Fragment can only have `key` and `children` props.', key);\n            setCurrentlyValidatingElement$1(null);\n            break;\n          }\n        }\n        if (fragment.ref !== null) {\n          setCurrentlyValidatingElement$1(fragment);\n          error('Invalid attribute `ref` supplied to `React.Fragment`.');\n          setCurrentlyValidatingElement$1(null);\n        }\n      }\n    }\n    function createElementWithValidation(type, props, children) {\n      var validType = isValidElementType(type); // We warn in this case but don't throw. We expect the element creation to\n      // succeed and there will likely be errors in render.\n\n      if (!validType) {\n        var info = '';\n        if (type === undefined || typeof type === 'object' && type !== null && Object.keys(type).length === 0) {\n          info += ' You likely forgot to export your component from the file ' + \"it's defined in, or you might have mixed up default and named imports.\";\n        }\n        var sourceInfo = getSourceInfoErrorAddendumForProps(props);\n        if (sourceInfo) {\n          info += sourceInfo;\n        } else {\n          info += getDeclarationErrorAddendum();\n        }\n        var typeString;\n        if (type === null) {\n          typeString = 'null';\n        } else if (isArray(type)) {\n          typeString = 'array';\n        } else if (type !== undefined && type.$$typeof === REACT_ELEMENT_TYPE) {\n          typeString = \"<\" + (getComponentNameFromType(type.type) || 'Unknown') + \" />\";\n          info = ' Did you accidentally export a JSX literal instead of a component?';\n        } else {\n          typeString = typeof type;\n        }\n        {\n          error('React.createElement: type is invalid -- expected a string (for ' + 'built-in components) or a class/function (for composite ' + 'components) but got: %s.%s', typeString, info);\n        }\n      }\n      var element = createElement.apply(this, arguments); // The result can be nullish if a mock or a custom function is used.\n      // TODO: Drop this when these are no longer allowed as the type argument.\n\n      if (element == null) {\n        return element;\n      } // Skip key warning if the type isn't valid since our key validation logic\n      // doesn't expect a non-string/function type and can throw confusing errors.\n      // We don't want exception behavior to differ between dev and prod.\n      // (Rendering will throw with a helpful message and as soon as the type is\n      // fixed, the key warnings will appear.)\n\n      if (validType) {\n        for (var i = 2; i < arguments.length; i++) {\n          validateChildKeys(arguments[i], type);\n        }\n      }\n      if (type === REACT_FRAGMENT_TYPE) {\n        validateFragmentProps(element);\n      } else {\n        validatePropTypes(element);\n      }\n      return element;\n    }\n    var didWarnAboutDeprecatedCreateFactory = false;\n    function createFactoryWithValidation(type) {\n      var validatedFactory = createElementWithValidation.bind(null, type);\n      validatedFactory.type = type;\n      {\n        if (!didWarnAboutDeprecatedCreateFactory) {\n          didWarnAboutDeprecatedCreateFactory = true;\n          warn('React.createFactory() is deprecated and will be removed in ' + 'a future major release. Consider using JSX ' + 'or use React.createElement() directly instead.');\n        } // Legacy hook: remove it\n\n        Object.defineProperty(validatedFactory, 'type', {\n          enumerable: false,\n          get: function get() {\n            warn('Factory.type is deprecated. Access the class directly ' + 'before passing it to createFactory.');\n            Object.defineProperty(this, 'type', {\n              value: type\n            });\n            return type;\n          }\n        });\n      }\n      return validatedFactory;\n    }\n    function cloneElementWithValidation(element, props, children) {\n      var newElement = cloneElement.apply(this, arguments);\n      for (var i = 2; i < arguments.length; i++) {\n        validateChildKeys(arguments[i], newElement.type);\n      }\n      validatePropTypes(newElement);\n      return newElement;\n    }\n    var ContextRegistry$1 = ReactSharedInternals.ContextRegistry;\n    function createServerContext(globalName, defaultValue) {\n      var wasDefined = true;\n      if (!ContextRegistry$1[globalName]) {\n        wasDefined = false;\n        var _context = {\n          $$typeof: REACT_SERVER_CONTEXT_TYPE,\n          // As a workaround to support multiple concurrent renderers, we categorize\n          // some renderers as primary and others as secondary. We only expect\n          // there to be two concurrent renderers at most: React Native (primary) and\n          // Fabric (secondary); React DOM (primary) and React ART (secondary).\n          // Secondary renderers store their context values on separate fields.\n          _currentValue: defaultValue,\n          _currentValue2: defaultValue,\n          _defaultValue: defaultValue,\n          // Used to track how many concurrent renderers this context currently\n          // supports within in a single renderer. Such as parallel server rendering.\n          _threadCount: 0,\n          // These are circular\n          Provider: null,\n          Consumer: null,\n          _globalName: globalName\n        };\n        _context.Provider = {\n          $$typeof: REACT_PROVIDER_TYPE,\n          _context: _context\n        };\n        {\n          var hasWarnedAboutUsingConsumer;\n          _context._currentRenderer = null;\n          _context._currentRenderer2 = null;\n          Object.defineProperties(_context, {\n            Consumer: {\n              get: function get() {\n                if (!hasWarnedAboutUsingConsumer) {\n                  error('Consumer pattern is not supported by ReactServerContext');\n                  hasWarnedAboutUsingConsumer = true;\n                }\n                return null;\n              }\n            }\n          });\n        }\n        ContextRegistry$1[globalName] = _context;\n      }\n      var context = ContextRegistry$1[globalName];\n      if (context._defaultValue === REACT_SERVER_CONTEXT_DEFAULT_VALUE_NOT_LOADED) {\n        context._defaultValue = defaultValue;\n        if (context._currentValue === REACT_SERVER_CONTEXT_DEFAULT_VALUE_NOT_LOADED) {\n          context._currentValue = defaultValue;\n        }\n        if (context._currentValue2 === REACT_SERVER_CONTEXT_DEFAULT_VALUE_NOT_LOADED) {\n          context._currentValue2 = defaultValue;\n        }\n      } else if (wasDefined) {\n        throw new Error(\"ServerContext: \" + globalName + \" already defined\");\n      }\n      return context;\n    }\n    function startTransition(scope, options) {\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = {};\n      var currentTransition = ReactCurrentBatchConfig.transition;\n      {\n        ReactCurrentBatchConfig.transition._updatedFibers = new Set();\n      }\n      try {\n        scope();\n      } finally {\n        ReactCurrentBatchConfig.transition = prevTransition;\n        {\n          if (prevTransition === null && currentTransition._updatedFibers) {\n            var updatedFibersCount = currentTransition._updatedFibers.size;\n            if (updatedFibersCount > 10) {\n              warn('Detected a large number of updates inside startTransition. ' + 'If this is due to a subscription please re-write it to use React provided hooks. ' + 'Otherwise concurrent mode guarantees are off the table.');\n            }\n            currentTransition._updatedFibers.clear();\n          }\n        }\n      }\n    }\n    var didWarnAboutMessageChannel = false;\n    var enqueueTaskImpl = null;\n    function enqueueTask(task) {\n      if (enqueueTaskImpl === null) {\n        try {\n          // read require off the module object to get around the bundlers.\n          // we don't want them to detect a require and bundle a Node polyfill.\n          var requireString = ('require' + Math.random()).slice(0, 7);\n          var nodeRequire = module && module[requireString]; // assuming we're in node, let's try to get node's\n          // version of setImmediate, bypassing fake timers if any.\n\n          enqueueTaskImpl = nodeRequire.call(module, 'timers').setImmediate;\n        } catch (_err) {\n          // we're in a browser\n          // we can't use regular timers because they may still be faked\n          // so we try MessageChannel+postMessage instead\n          enqueueTaskImpl = function enqueueTaskImpl(callback) {\n            {\n              if (didWarnAboutMessageChannel === false) {\n                didWarnAboutMessageChannel = true;\n                if (typeof MessageChannel === 'undefined') {\n                  error('This browser does not have a MessageChannel implementation, ' + 'so enqueuing tasks via await act(async () => ...) will fail. ' + 'Please file an issue at https://github.com/facebook/react/issues ' + 'if you encounter this warning.');\n                }\n              }\n            }\n            var channel = new MessageChannel();\n            channel.port1.onmessage = callback;\n            channel.port2.postMessage(undefined);\n          };\n        }\n      }\n      return enqueueTaskImpl(task);\n    }\n\n    // number of `act` scopes on the stack.\n\n    var actScopeDepth = 0; // We only warn the first time you neglect to await an async `act` scope.\n\n    var didWarnNoAwaitAct = false;\n    function act(callback) {\n      {\n        // When ReactCurrentActQueue.current is not null, it signals to React that\n        // we're currently inside an `act` scope. React will push all its tasks to\n        // this queue instead of scheduling them with platform APIs.\n        //\n        // We set this to an empty array when we first enter an `act` scope, and\n        // only unset it once we've left the outermost `act` scope — remember that\n        // `act` calls can be nested.\n        //\n        // If we're already inside an `act` scope, reuse the existing queue.\n        var prevIsBatchingLegacy = ReactCurrentActQueue.isBatchingLegacy;\n        var prevActQueue = ReactCurrentActQueue.current;\n        var prevActScopeDepth = actScopeDepth;\n        actScopeDepth++;\n        var queue = ReactCurrentActQueue.current = prevActQueue !== null ? prevActQueue : []; // Used to reproduce behavior of `batchedUpdates` in legacy mode. Only\n        // set to `true` while the given callback is executed, not for updates\n        // triggered during an async event, because this is how the legacy\n        // implementation of `act` behaved.\n\n        ReactCurrentActQueue.isBatchingLegacy = true;\n        var result; // This tracks whether the `act` call is awaited. In certain cases, not\n        // awaiting it is a mistake, so we will detect that and warn.\n\n        var didAwaitActCall = false;\n        try {\n          // Reset this to `false` right before entering the React work loop. The\n          // only place we ever read this fields is just below, right after running\n          // the callback. So we don't need to reset after the callback runs.\n          ReactCurrentActQueue.didScheduleLegacyUpdate = false;\n          result = callback();\n          var didScheduleLegacyUpdate = ReactCurrentActQueue.didScheduleLegacyUpdate; // Replicate behavior of original `act` implementation in legacy mode,\n          // which flushed updates immediately after the scope function exits, even\n          // if it's an async function.\n\n          if (!prevIsBatchingLegacy && didScheduleLegacyUpdate) {\n            flushActQueue(queue);\n          } // `isBatchingLegacy` gets reset using the regular stack, not the async\n          // one used to track `act` scopes. Why, you may be wondering? Because\n          // that's how it worked before version 18. Yes, it's confusing! We should\n          // delete legacy mode!!\n\n          ReactCurrentActQueue.isBatchingLegacy = prevIsBatchingLegacy;\n        } catch (error) {\n          // `isBatchingLegacy` gets reset using the regular stack, not the async\n          // one used to track `act` scopes. Why, you may be wondering? Because\n          // that's how it worked before version 18. Yes, it's confusing! We should\n          // delete legacy mode!!\n          ReactCurrentActQueue.isBatchingLegacy = prevIsBatchingLegacy;\n          popActScope(prevActQueue, prevActScopeDepth);\n          throw error;\n        }\n        if (result !== null && typeof result === 'object' &&\n        // $FlowFixMe[method-unbinding]\n        typeof result.then === 'function') {\n          // A promise/thenable was returned from the callback. Wait for it to\n          // resolve before flushing the queue.\n          //\n          // If `act` were implemented as an async function, this whole block could\n          // be a single `await` call. That's really the only difference between\n          // this branch and the next one.\n          var thenable = result; // Warn if the an `act` call with an async scope is not awaited. In a\n          // future release, consider making this an error.\n\n          queueSeveralMicrotasks(function () {\n            if (!didAwaitActCall && !didWarnNoAwaitAct) {\n              didWarnNoAwaitAct = true;\n              error('You called act(async () => ...) without await. ' + 'This could lead to unexpected testing behaviour, ' + 'interleaving multiple act calls and mixing their ' + 'scopes. ' + 'You should - await act(async () => ...);');\n            }\n          });\n          return {\n            then: function then(resolve, reject) {\n              didAwaitActCall = true;\n              thenable.then(function (returnValue) {\n                popActScope(prevActQueue, prevActScopeDepth);\n                if (prevActScopeDepth === 0) {\n                  // We're exiting the outermost `act` scope. Flush the queue.\n                  try {\n                    flushActQueue(queue);\n                    enqueueTask(function () {\n                      return (\n                        // Recursively flush tasks scheduled by a microtask.\n                        recursivelyFlushAsyncActWork(returnValue, resolve, reject)\n                      );\n                    });\n                  } catch (error) {\n                    // `thenable` might not be a real promise, and `flushActQueue`\n                    // might throw, so we need to wrap `flushActQueue` in a\n                    // try/catch.\n                    reject(error);\n                  }\n                } else {\n                  resolve(returnValue);\n                }\n              }, function (error) {\n                popActScope(prevActQueue, prevActScopeDepth);\n                reject(error);\n              });\n            }\n          };\n        } else {\n          var returnValue = result; // The callback is not an async function. Exit the current\n          // scope immediately.\n\n          popActScope(prevActQueue, prevActScopeDepth);\n          if (prevActScopeDepth === 0) {\n            // We're exiting the outermost `act` scope. Flush the queue.\n            flushActQueue(queue); // If the queue is not empty, it implies that we intentionally yielded\n            // to the main thread, because something suspended. We will continue\n            // in an asynchronous task.\n            //\n            // Warn if something suspends but the `act` call is not awaited.\n            // In a future release, consider making this an error.\n\n            if (queue.length !== 0) {\n              queueSeveralMicrotasks(function () {\n                if (!didAwaitActCall && !didWarnNoAwaitAct) {\n                  didWarnNoAwaitAct = true;\n                  error('A component suspended inside an `act` scope, but the ' + '`act` call was not awaited. When testing React ' + 'components that depend on asynchronous data, you must ' + 'await the result:\\n\\n' + 'await act(() => ...)');\n                }\n              });\n            } // Like many things in this module, this is next part is confusing.\n            //\n            // We do not currently require every `act` call that is passed a\n            // callback to be awaited, through arguably we should. Since this\n            // callback was synchronous, we need to exit the current scope before\n            // returning.\n            //\n            // However, if thenable we're about to return *is* awaited, we'll\n            // immediately restore the current scope. So it shouldn't observable.\n            //\n            // This doesn't affect the case where the scope callback is async,\n            // because we always require those calls to be awaited.\n            //\n            // TODO: In a future version, consider always requiring all `act` calls\n            // to be awaited, regardless of whether the callback is sync or async.\n\n            ReactCurrentActQueue.current = null;\n          }\n          return {\n            then: function then(resolve, reject) {\n              didAwaitActCall = true;\n              if (prevActScopeDepth === 0) {\n                // If the `act` call is awaited, restore the queue we were\n                // using before (see long comment above) so we can flush it.\n                ReactCurrentActQueue.current = queue;\n                enqueueTask(function () {\n                  return (\n                    // Recursively flush tasks scheduled by a microtask.\n                    recursivelyFlushAsyncActWork(returnValue, resolve, reject)\n                  );\n                });\n              } else {\n                resolve(returnValue);\n              }\n            }\n          };\n        }\n      }\n    }\n    function popActScope(prevActQueue, prevActScopeDepth) {\n      {\n        if (prevActScopeDepth !== actScopeDepth - 1) {\n          error('You seem to have overlapping act() calls, this is not supported. ' + 'Be sure to await previous act() calls before making a new one. ');\n        }\n        actScopeDepth = prevActScopeDepth;\n      }\n    }\n    function recursivelyFlushAsyncActWork(returnValue, resolve, reject) {\n      {\n        // Check if any tasks were scheduled asynchronously.\n        var queue = ReactCurrentActQueue.current;\n        if (queue !== null) {\n          if (queue.length !== 0) {\n            // Async tasks were scheduled, mostly likely in a microtask.\n            // Keep flushing until there are no more.\n            try {\n              flushActQueue(queue); // The work we just performed may have schedule additional async\n              // tasks. Wait a macrotask and check again.\n\n              enqueueTask(function () {\n                return recursivelyFlushAsyncActWork(returnValue, resolve, reject);\n              });\n            } catch (error) {\n              // Leave remaining tasks on the queue if something throws.\n              reject(error);\n            }\n          } else {\n            // The queue is empty. We can finish.\n            ReactCurrentActQueue.current = null;\n            resolve(returnValue);\n          }\n        } else {\n          resolve(returnValue);\n        }\n      }\n    }\n    var isFlushing = false;\n    function flushActQueue(queue) {\n      {\n        if (!isFlushing) {\n          // Prevent re-entrance.\n          isFlushing = true;\n          var i = 0;\n          try {\n            for (; i < queue.length; i++) {\n              var callback = queue[i];\n              do {\n                ReactCurrentActQueue.didUsePromise = false;\n                var continuation = callback(false);\n                if (continuation !== null) {\n                  if (ReactCurrentActQueue.didUsePromise) {\n                    // The component just suspended. Yield to the main thread in\n                    // case the promise is already resolved. If so, it will ping in\n                    // a microtask and we can resume without unwinding the stack.\n                    queue[i] = callback;\n                    queue.splice(0, i);\n                    return;\n                  }\n                  callback = continuation;\n                } else {\n                  break;\n                }\n              } while (true);\n            } // We flushed the entire queue.\n\n            queue.length = 0;\n          } catch (error) {\n            // If something throws, leave the remaining callbacks on the queue.\n            queue.splice(0, i + 1);\n            throw error;\n          } finally {\n            isFlushing = false;\n          }\n        }\n      }\n    } // Some of our warnings attempt to detect if the `act` call is awaited by\n    // checking in an asynchronous task. Wait a few microtasks before checking. The\n    // only reason one isn't sufficient is we want to accommodate the case where an\n    // `act` call is returned from an async function without first being awaited,\n    // since that's a somewhat common pattern. If you do this too many times in a\n    // nested sequence, you might get a warning, but you can always fix by awaiting\n    // the call.\n    //\n    // A macrotask would also work (and is the fallback) but depending on the test\n    // environment it may cause the warning to fire too late.\n\n    var queueSeveralMicrotasks = typeof queueMicrotask === 'function' ? function (callback) {\n      queueMicrotask(function () {\n        return queueMicrotask(callback);\n      });\n    } : enqueueTask;\n    var createElement$1 = createElementWithValidation;\n    var cloneElement$1 = cloneElementWithValidation;\n    var createFactory = createFactoryWithValidation;\n    var Children = {\n      map: mapChildren,\n      forEach: forEachChildren,\n      count: countChildren,\n      toArray: toArray,\n      only: onlyChild\n    };\n    exports.Children = Children;\n    exports.Component = Component;\n    exports.Fragment = REACT_FRAGMENT_TYPE;\n    exports.Profiler = REACT_PROFILER_TYPE;\n    exports.PureComponent = PureComponent;\n    exports.StrictMode = REACT_STRICT_MODE_TYPE;\n    exports.Suspense = REACT_SUSPENSE_TYPE;\n    exports.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED = ReactSharedInternals;\n    exports.cache = cache;\n    exports.cloneElement = cloneElement$1;\n    exports.createContext = createContext;\n    exports.createElement = createElement$1;\n    exports.createFactory = createFactory;\n    exports.createRef = createRef;\n    exports.createServerContext = createServerContext;\n    exports.forwardRef = forwardRef;\n    exports.isValidElement = isValidElement;\n    exports.lazy = lazy;\n    exports.memo = memo;\n    exports.startTransition = startTransition;\n    exports.unstable_act = act;\n    exports.unstable_useCacheRefresh = useCacheRefresh;\n    exports.use = use;\n    exports.useCallback = useCallback;\n    exports.useContext = useContext;\n    exports.useDebugValue = useDebugValue;\n    exports.useDeferredValue = useDeferredValue;\n    exports.useEffect = useEffect;\n    exports.useId = useId;\n    exports.useImperativeHandle = useImperativeHandle;\n    exports.useInsertionEffect = useInsertionEffect;\n    exports.useLayoutEffect = useLayoutEffect;\n    exports.useMemo = useMemo;\n    exports.useReducer = useReducer;\n    exports.useRef = useRef;\n    exports.useState = useState;\n    exports.useSyncExternalStore = useSyncExternalStore;\n    exports.useTransition = useTransition;\n    exports.version = ReactVersion;\n    /* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */\n    if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== 'undefined' && typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop === 'function') {\n      __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop(new Error());\n    }\n  })();\n}","map":{"version":3,"names":["process","env","NODE_ENV","__REACT_DEVTOOLS_GLOBAL_HOOK__","registerInternalModuleStart","Error","ReactVersion","REACT_ELEMENT_TYPE","Symbol","for","REACT_PORTAL_TYPE","REACT_FRAGMENT_TYPE","REACT_STRICT_MODE_TYPE","REACT_PROFILER_TYPE","REACT_PROVIDER_TYPE","REACT_CONTEXT_TYPE","REACT_SERVER_CONTEXT_TYPE","REACT_FORWARD_REF_TYPE","REACT_SUSPENSE_TYPE","REACT_SUSPENSE_LIST_TYPE","REACT_MEMO_TYPE","REACT_LAZY_TYPE","REACT_OFFSCREEN_TYPE","REACT_CACHE_TYPE","REACT_SERVER_CONTEXT_DEFAULT_VALUE_NOT_LOADED","MAYBE_ITERATOR_SYMBOL","iterator","FAUX_ITERATOR_SYMBOL","getIteratorFn","maybeIterable","maybeIterator","ReactCurrentDispatcher","current","ReactCurrentCache","ReactCurrentBatchConfig","transition","ReactCurrentActQueue","isBatchingLegacy","didScheduleLegacyUpdate","didUsePromise","ReactCurrentOwner","ReactDebugCurrentFrame","currentExtraStackFrame","setExtraStackFrame","stack","getCurrentStack","getStackAddendum","impl","enableScopeAPI","enableCacheElement","enableTransitionTracing","enableLegacyHidden","enableDebugTracing","ContextRegistry","ReactSharedInternals","warn","format","_len","arguments","length","args","Array","_key","printWarning","error","_len2","_key2","level","concat","argsWithFormat","map","item","String","unshift","Function","prototype","apply","call","console","didWarnStateUpdateForUnmountedComponent","warnNoop","publicInstance","callerName","_constructor","constructor","componentName","displayName","name","warningKey","ReactNoopUpdateQueue","isMounted","enqueueForceUpdate","callback","enqueueReplaceState","completeState","enqueueSetState","partialState","assign","Object","emptyObject","freeze","Component","props","context","updater","refs","isReactComponent","setState","forceUpdate","deprecatedAPIs","replaceState","defineDeprecationWarning","methodName","info","defineProperty","get","undefined","fnName","hasOwnProperty","ComponentDummy","PureComponent","pureComponentPrototype","isPureReactComponent","createRef","refObject","seal","isArrayImpl","isArray","a","typeName","value","hasToStringTag","toStringTag","type","willCoercionThrow","testStringCoercion","e","checkKeyStringCoercion","getWrappedName","outerType","innerType","wrapperName","functionName","getContextName","getComponentNameFromType","tag","$$typeof","provider","_context","render","outerName","lazyComponent","payload","_payload","init","_init","x","context2","_globalName","RESERVED_PROPS","key","ref","__self","__source","specialPropKeyWarningShown","specialPropRefWarningShown","didWarnAboutStringRefs","hasValidRef","config","getter","getOwnPropertyDescriptor","isReactWarning","hasValidKey","defineKeyPropWarningGetter","warnAboutAccessingKey","configurable","defineRefPropWarningGetter","warnAboutAccessingRef","warnIfStringRefCannotBeAutoConverted","stateNode","ReactElement","self","source","owner","element","_owner","_store","enumerable","writable","createElement","children","propName","childrenLength","childArray","i","defaultProps","cloneAndReplaceKey","oldElement","newKey","newElement","_self","_source","cloneElement","isValidElement","object","SEPARATOR","SUBSEPARATOR","escape","escapeRegex","escaperLookup","escapedString","replace","match","didWarnAboutMaps","userProvidedKeyEscapeRegex","escapeUserProvidedKey","text","getElementKey","index","toString","mapIntoArray","array","escapedPrefix","nameSoFar","invokeCallback","_child","mappedChild","childKey","escapedChildKey","c","push","child","nextName","subtreeCount","nextNamePrefix","iteratorFn","iterableChildren","entries","step","ii","next","done","childrenString","keys","join","mapChildren","func","result","count","countChildren","n","forEachChildren","forEachFunc","forEachContext","toArray","onlyChild","createContext","defaultValue","_currentValue","_currentValue2","_threadCount","Provider","Consumer","_defaultValue","hasWarnedAboutUsingNestedContextConsumers","hasWarnedAboutUsingConsumerProvider","hasWarnedAboutDisplayNameOnConsumer","defineProperties","set","_Provider","_currentRenderer","_currentRenderer2","Uninitialized","Pending","Resolved","Rejected","lazyInitializer","_status","ctor","_result","thenable","then","moduleObject","resolved","rejected","pending","default","lazy","lazyType","propTypes","newDefaultProps","newPropTypes","forwardRef","elementType","ownName","REACT_MODULE_REFERENCE","isValidElementType","getModuleId","memo","compare","UNTERMINATED","TERMINATED","ERRORED","createCacheRoot","WeakMap","createCacheNode","s","v","o","p","cache","fn","dispatcher","fnMap","getCacheForType","fnNode","cacheNode","l","arg","objectCache","objectNode","primitiveCache","Map","primitiveNode","terminatedNode","erroredNode","resolveDispatcher","useContext","Context","realContext","useState","initialState","useReducer","reducer","initialArg","useRef","initialValue","useEffect","create","deps","useInsertionEffect","useLayoutEffect","useCallback","useMemo","useImperativeHandle","useDebugValue","formatterFn","useTransition","useDeferredValue","useId","useSyncExternalStore","subscribe","getSnapshot","getServerSnapshot","useCacheRefresh","use","usable","disabledDepth","prevLog","prevInfo","prevWarn","prevError","prevGroup","prevGroupCollapsed","prevGroupEnd","disabledLog","__reactDisabledLog","disableLogs","log","group","groupCollapsed","groupEnd","reenableLogs","ReactCurrentDispatcher$1","prefix","describeBuiltInComponentFrame","ownerFn","trim","reentry","componentFrameCache","PossiblyWeakMap","describeNativeComponentFrame","construct","frame","control","previousPrepareStackTrace","prepareStackTrace","previousDispatcher","Fake","Reflect","sample","sampleLines","split","controlLines","_frame","includes","syntheticFrame","describeFunctionComponentFrame","shouldConstruct","describeUnknownElementTypeFrameInDEV","loggedTypeFailures","ReactDebugCurrentFrame$1","setCurrentlyValidatingElement","checkPropTypes","typeSpecs","values","location","has","bind","typeSpecName","error$1","err","ex","message","setCurrentlyValidatingElement$1","propTypesMisspellWarningShown","getDeclarationErrorAddendum","getSourceInfoErrorAddendum","fileName","lineNumber","getSourceInfoErrorAddendumForProps","elementProps","ownerHasKeyUseWarning","getCurrentComponentErrorInfo","parentType","parentName","validateExplicitKey","validated","currentComponentErrorInfo","childOwner","validateChildKeys","node","validatePropTypes","PropTypes","_name","getDefaultProps","isReactClassApproved","validateFragmentProps","fragment","createElementWithValidation","validType","sourceInfo","typeString","didWarnAboutDeprecatedCreateFactory","createFactoryWithValidation","validatedFactory","cloneElementWithValidation","ContextRegistry$1","createServerContext","globalName","wasDefined","hasWarnedAboutUsingConsumer","startTransition","scope","options","prevTransition","currentTransition","_updatedFibers","Set","updatedFibersCount","size","clear","didWarnAboutMessageChannel","enqueueTaskImpl","enqueueTask","task","requireString","Math","random","slice","nodeRequire","module","setImmediate","_err","MessageChannel","channel","port1","onmessage","port2","postMessage","actScopeDepth","didWarnNoAwaitAct","act","prevIsBatchingLegacy","prevActQueue","prevActScopeDepth","queue","didAwaitActCall","flushActQueue","popActScope","queueSeveralMicrotasks","resolve","reject","returnValue","recursivelyFlushAsyncActWork","isFlushing","continuation","splice","queueMicrotask","createElement$1","cloneElement$1","createFactory","Children","forEach","only","exports","Fragment","Profiler","StrictMode","Suspense","__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED","unstable_act","unstable_useCacheRefresh","version","registerInternalModuleStop"],"sources":["C:/Users/esfiene/Documents/WEBDEV-BOOTCAMP/react projects/Keeper-App/node_modules/react/cjs/react.development.js"],"sourcesContent":["/**\n * @license React\n * react.development.js\n *\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nif (process.env.NODE_ENV !== \"production\") {\n  (function() {\n\n          'use strict';\n\n/* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */\nif (\n  typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== 'undefined' &&\n  typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart ===\n    'function'\n) {\n  __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart(new Error());\n}\n          var ReactVersion = '18.3.0-next-fecc288b7-20221025';\n\n// ATTENTION\n// When adding new symbols to this file,\n// Please consider also adding to 'react-devtools-shared/src/backend/ReactSymbols'\n// The Symbol used to tag the ReactElement-like types.\nvar REACT_ELEMENT_TYPE = Symbol.for('react.element');\nvar REACT_PORTAL_TYPE = Symbol.for('react.portal');\nvar REACT_FRAGMENT_TYPE = Symbol.for('react.fragment');\nvar REACT_STRICT_MODE_TYPE = Symbol.for('react.strict_mode');\nvar REACT_PROFILER_TYPE = Symbol.for('react.profiler');\nvar REACT_PROVIDER_TYPE = Symbol.for('react.provider');\nvar REACT_CONTEXT_TYPE = Symbol.for('react.context');\nvar REACT_SERVER_CONTEXT_TYPE = Symbol.for('react.server_context');\nvar REACT_FORWARD_REF_TYPE = Symbol.for('react.forward_ref');\nvar REACT_SUSPENSE_TYPE = Symbol.for('react.suspense');\nvar REACT_SUSPENSE_LIST_TYPE = Symbol.for('react.suspense_list');\nvar REACT_MEMO_TYPE = Symbol.for('react.memo');\nvar REACT_LAZY_TYPE = Symbol.for('react.lazy');\nvar REACT_OFFSCREEN_TYPE = Symbol.for('react.offscreen');\nvar REACT_CACHE_TYPE = Symbol.for('react.cache');\nvar REACT_SERVER_CONTEXT_DEFAULT_VALUE_NOT_LOADED = Symbol.for('react.default_value');\nvar MAYBE_ITERATOR_SYMBOL = Symbol.iterator;\nvar FAUX_ITERATOR_SYMBOL = '@@iterator';\nfunction getIteratorFn(maybeIterable) {\n  if (maybeIterable === null || typeof maybeIterable !== 'object') {\n    return null;\n  }\n\n  var maybeIterator = MAYBE_ITERATOR_SYMBOL && maybeIterable[MAYBE_ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL];\n\n  if (typeof maybeIterator === 'function') {\n    return maybeIterator;\n  }\n\n  return null;\n}\n\n/**\n * Keeps track of the current dispatcher.\n */\nvar ReactCurrentDispatcher = {\n  current: null\n};\n\n/**\n * Keeps track of the current Cache dispatcher.\n */\nvar ReactCurrentCache = {\n  current: null\n};\n\n/**\n * Keeps track of the current batch's configuration such as how long an update\n * should suspend for if it needs to.\n */\nvar ReactCurrentBatchConfig = {\n  transition: null\n};\n\nvar ReactCurrentActQueue = {\n  current: null,\n  // Used to reproduce behavior of `batchedUpdates` in legacy mode.\n  isBatchingLegacy: false,\n  didScheduleLegacyUpdate: false,\n  // Tracks whether something called `use` during the current batch of work.\n  // Determines whether we should yield to microtasks to unwrap already resolved\n  // promises without suspending.\n  didUsePromise: false\n};\n\n/**\n * Keeps track of the current owner.\n *\n * The current owner is the component who should own any components that are\n * currently being constructed.\n */\nvar ReactCurrentOwner = {\n  /**\n   * @internal\n   * @type {ReactComponent}\n   */\n  current: null\n};\n\nvar ReactDebugCurrentFrame = // $FlowFixMe[incompatible-exact]\n{};\nvar currentExtraStackFrame = null;\nfunction setExtraStackFrame(stack) {\n  {\n    currentExtraStackFrame = stack;\n  }\n}\n\n{\n  ReactDebugCurrentFrame.setExtraStackFrame = function (stack) {\n    {\n      currentExtraStackFrame = stack;\n    }\n  }; // Stack implementation injected by the current renderer.\n\n\n  ReactDebugCurrentFrame.getCurrentStack = null;\n\n  ReactDebugCurrentFrame.getStackAddendum = function () {\n    var stack = ''; // Add an extra top frame while an element is being validated\n\n    if (currentExtraStackFrame) {\n      stack += currentExtraStackFrame;\n    } // Delegate to the injected renderer-specific implementation\n\n\n    var impl = ReactDebugCurrentFrame.getCurrentStack;\n\n    if (impl) {\n      stack += impl() || '';\n    }\n\n    return stack;\n  };\n}\n\n// -----------------------------------------------------------------------------\n\nvar enableScopeAPI = false; // Experimental Create Event Handle API.\nvar enableCacheElement = false;\nvar enableTransitionTracing = false; // No known bugs, but needs performance testing\n\nvar enableLegacyHidden = false; // Enables unstable_avoidThisFallback feature in Fiber\n// stuff. Intended to enable React core members to more easily debug scheduling\n// issues in DEV builds.\n\nvar enableDebugTracing = false; // Track which Fiber(s) schedule render work.\n\nvar ContextRegistry = {};\n\nvar ReactSharedInternals = {\n  ReactCurrentDispatcher: ReactCurrentDispatcher,\n  ReactCurrentCache: ReactCurrentCache,\n  ReactCurrentBatchConfig: ReactCurrentBatchConfig,\n  ReactCurrentOwner: ReactCurrentOwner\n};\n\n{\n  ReactSharedInternals.ReactDebugCurrentFrame = ReactDebugCurrentFrame;\n  ReactSharedInternals.ReactCurrentActQueue = ReactCurrentActQueue;\n}\n\n{\n  ReactSharedInternals.ContextRegistry = ContextRegistry;\n}\n\n// by calls to these methods by a Babel plugin.\n//\n// In PROD (or in packages without access to React internals),\n// they are left as they are instead.\n\nfunction warn(format) {\n  {\n    {\n      for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n        args[_key - 1] = arguments[_key];\n      }\n\n      printWarning('warn', format, args);\n    }\n  }\n}\nfunction error(format) {\n  {\n    {\n      for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n        args[_key2 - 1] = arguments[_key2];\n      }\n\n      printWarning('error', format, args);\n    }\n  }\n}\n\nfunction printWarning(level, format, args) {\n  // When changing this logic, you might want to also\n  // update consoleWithStackDev.www.js as well.\n  {\n    var ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;\n    var stack = ReactDebugCurrentFrame.getStackAddendum();\n\n    if (stack !== '') {\n      format += '%s';\n      args = args.concat([stack]);\n    } // eslint-disable-next-line react-internal/safe-string-coercion\n\n\n    var argsWithFormat = args.map(function (item) {\n      return String(item);\n    }); // Careful: RN currently depends on this prefix\n\n    argsWithFormat.unshift('Warning: ' + format); // We intentionally don't use spread (or .apply) directly because it\n    // breaks IE9: https://github.com/facebook/react/issues/13610\n    // eslint-disable-next-line react-internal/no-production-logging\n\n    Function.prototype.apply.call(console[level], console, argsWithFormat);\n  }\n}\n\nvar didWarnStateUpdateForUnmountedComponent = {};\n\nfunction warnNoop(publicInstance, callerName) {\n  {\n    var _constructor = publicInstance.constructor;\n    var componentName = _constructor && (_constructor.displayName || _constructor.name) || 'ReactClass';\n    var warningKey = componentName + \".\" + callerName;\n\n    if (didWarnStateUpdateForUnmountedComponent[warningKey]) {\n      return;\n    }\n\n    error(\"Can't call %s on a component that is not yet mounted. \" + 'This is a no-op, but it might indicate a bug in your application. ' + 'Instead, assign to `this.state` directly or define a `state = {};` ' + 'class property with the desired state in the %s component.', callerName, componentName);\n\n    didWarnStateUpdateForUnmountedComponent[warningKey] = true;\n  }\n}\n/**\n * This is the abstract API for an update queue.\n */\n\n\nvar ReactNoopUpdateQueue = {\n  /**\n   * Checks whether or not this composite component is mounted.\n   * @param {ReactClass} publicInstance The instance we want to test.\n   * @return {boolean} True if mounted, false otherwise.\n   * @protected\n   * @final\n   */\n  isMounted: function (publicInstance) {\n    return false;\n  },\n\n  /**\n   * Forces an update. This should only be invoked when it is known with\n   * certainty that we are **not** in a DOM transaction.\n   *\n   * You may want to call this when you know that some deeper aspect of the\n   * component's state has changed but `setState` was not called.\n   *\n   * This will not invoke `shouldComponentUpdate`, but it will invoke\n   * `componentWillUpdate` and `componentDidUpdate`.\n   *\n   * @param {ReactClass} publicInstance The instance that should rerender.\n   * @param {?function} callback Called after component is updated.\n   * @param {?string} callerName name of the calling function in the public API.\n   * @internal\n   */\n  enqueueForceUpdate: function (publicInstance, callback, callerName) {\n    warnNoop(publicInstance, 'forceUpdate');\n  },\n\n  /**\n   * Replaces all of the state. Always use this or `setState` to mutate state.\n   * You should treat `this.state` as immutable.\n   *\n   * There is no guarantee that `this.state` will be immediately updated, so\n   * accessing `this.state` after calling this method may return the old value.\n   *\n   * @param {ReactClass} publicInstance The instance that should rerender.\n   * @param {object} completeState Next state.\n   * @param {?function} callback Called after component is updated.\n   * @param {?string} callerName name of the calling function in the public API.\n   * @internal\n   */\n  enqueueReplaceState: function (publicInstance, completeState, callback, callerName) {\n    warnNoop(publicInstance, 'replaceState');\n  },\n\n  /**\n   * Sets a subset of the state. This only exists because _pendingState is\n   * internal. This provides a merging strategy that is not available to deep\n   * properties which is confusing. TODO: Expose pendingState or don't use it\n   * during the merge.\n   *\n   * @param {ReactClass} publicInstance The instance that should rerender.\n   * @param {object} partialState Next partial state to be merged with state.\n   * @param {?function} callback Called after component is updated.\n   * @param {?string} Name of the calling function in the public API.\n   * @internal\n   */\n  enqueueSetState: function (publicInstance, partialState, callback, callerName) {\n    warnNoop(publicInstance, 'setState');\n  }\n};\n\nvar assign = Object.assign;\n\nvar emptyObject = {};\n\n{\n  Object.freeze(emptyObject);\n}\n/**\n * Base class helpers for the updating state of a component.\n */\n\n\nfunction Component(props, context, updater) {\n  this.props = props;\n  this.context = context; // If a component has string refs, we will assign a different object later.\n\n  this.refs = emptyObject; // We initialize the default updater but the real one gets injected by the\n  // renderer.\n\n  this.updater = updater || ReactNoopUpdateQueue;\n}\n\nComponent.prototype.isReactComponent = {};\n/**\n * Sets a subset of the state. Always use this to mutate\n * state. You should treat `this.state` as immutable.\n *\n * There is no guarantee that `this.state` will be immediately updated, so\n * accessing `this.state` after calling this method may return the old value.\n *\n * There is no guarantee that calls to `setState` will run synchronously,\n * as they may eventually be batched together.  You can provide an optional\n * callback that will be executed when the call to setState is actually\n * completed.\n *\n * When a function is provided to setState, it will be called at some point in\n * the future (not synchronously). It will be called with the up to date\n * component arguments (state, props, context). These values can be different\n * from this.* because your function may be called after receiveProps but before\n * shouldComponentUpdate, and this new state, props, and context will not yet be\n * assigned to this.\n *\n * @param {object|function} partialState Next partial state or function to\n *        produce next partial state to be merged with current state.\n * @param {?function} callback Called after state is updated.\n * @final\n * @protected\n */\n\nComponent.prototype.setState = function (partialState, callback) {\n  if (typeof partialState !== 'object' && typeof partialState !== 'function' && partialState != null) {\n    throw new Error('setState(...): takes an object of state variables to update or a ' + 'function which returns an object of state variables.');\n  }\n\n  this.updater.enqueueSetState(this, partialState, callback, 'setState');\n};\n/**\n * Forces an update. This should only be invoked when it is known with\n * certainty that we are **not** in a DOM transaction.\n *\n * You may want to call this when you know that some deeper aspect of the\n * component's state has changed but `setState` was not called.\n *\n * This will not invoke `shouldComponentUpdate`, but it will invoke\n * `componentWillUpdate` and `componentDidUpdate`.\n *\n * @param {?function} callback Called after update is complete.\n * @final\n * @protected\n */\n\n\nComponent.prototype.forceUpdate = function (callback) {\n  this.updater.enqueueForceUpdate(this, callback, 'forceUpdate');\n};\n/**\n * Deprecated APIs. These APIs used to exist on classic React classes but since\n * we would like to deprecate them, we're not going to move them over to this\n * modern base class. Instead, we define a getter that warns if it's accessed.\n */\n\n\n{\n  var deprecatedAPIs = {\n    isMounted: ['isMounted', 'Instead, make sure to clean up subscriptions and pending requests in ' + 'componentWillUnmount to prevent memory leaks.'],\n    replaceState: ['replaceState', 'Refactor your code to use setState instead (see ' + 'https://github.com/facebook/react/issues/3236).']\n  };\n\n  var defineDeprecationWarning = function (methodName, info) {\n    Object.defineProperty(Component.prototype, methodName, {\n      get: function () {\n        warn('%s(...) is deprecated in plain JavaScript React classes. %s', info[0], info[1]);\n\n        return undefined;\n      }\n    });\n  };\n\n  for (var fnName in deprecatedAPIs) {\n    if (deprecatedAPIs.hasOwnProperty(fnName)) {\n      defineDeprecationWarning(fnName, deprecatedAPIs[fnName]);\n    }\n  }\n}\n\nfunction ComponentDummy() {}\n\nComponentDummy.prototype = Component.prototype;\n/**\n * Convenience component with default shallow equality check for sCU.\n */\n\nfunction PureComponent(props, context, updater) {\n  this.props = props;\n  this.context = context; // If a component has string refs, we will assign a different object later.\n\n  this.refs = emptyObject;\n  this.updater = updater || ReactNoopUpdateQueue;\n}\n\nvar pureComponentPrototype = PureComponent.prototype = new ComponentDummy();\npureComponentPrototype.constructor = PureComponent; // Avoid an extra prototype jump for these methods.\n\nassign(pureComponentPrototype, Component.prototype);\npureComponentPrototype.isPureReactComponent = true;\n\n// an immutable object with a single mutable value\nfunction createRef() {\n  var refObject = {\n    current: null\n  };\n\n  {\n    Object.seal(refObject);\n  }\n\n  return refObject;\n}\n\nvar isArrayImpl = Array.isArray; // eslint-disable-next-line no-redeclare\n\nfunction isArray(a) {\n  return isArrayImpl(a);\n}\n\n/*\n * The `'' + value` pattern (used in perf-sensitive code) throws for Symbol\n * and Temporal.* types. See https://github.com/facebook/react/pull/22064.\n *\n * The functions in this module will throw an easier-to-understand,\n * easier-to-debug exception with a clear errors message message explaining the\n * problem. (Instead of a confusing exception thrown inside the implementation\n * of the `value` object).\n */\n// $FlowFixMe only called in DEV, so void return is not possible.\nfunction typeName(value) {\n  {\n    // toStringTag is needed for namespaced types like Temporal.Instant\n    var hasToStringTag = typeof Symbol === 'function' && Symbol.toStringTag;\n    var type = hasToStringTag && value[Symbol.toStringTag] || value.constructor.name || 'Object'; // $FlowFixMe\n\n    return type;\n  }\n} // $FlowFixMe only called in DEV, so void return is not possible.\n\n\nfunction willCoercionThrow(value) {\n  {\n    try {\n      testStringCoercion(value);\n      return false;\n    } catch (e) {\n      return true;\n    }\n  }\n}\n\nfunction testStringCoercion(value) {\n  // If you ended up here by following an exception call stack, here's what's\n  // happened: you supplied an object or symbol value to React (as a prop, key,\n  // DOM attribute, CSS property, string ref, etc.) and when React tried to\n  // coerce it to a string using `'' + value`, an exception was thrown.\n  //\n  // The most common types that will cause this exception are `Symbol` instances\n  // and Temporal objects like `Temporal.Instant`. But any object that has a\n  // `valueOf` or `[Symbol.toPrimitive]` method that throws will also cause this\n  // exception. (Library authors do this to prevent users from using built-in\n  // numeric operators like `+` or comparison operators like `>=` because custom\n  // methods are needed to perform accurate arithmetic or comparison.)\n  //\n  // To fix the problem, coerce this object or symbol value to a string before\n  // passing it to React. The most reliable way is usually `String(value)`.\n  //\n  // To find which value is throwing, check the browser or debugger console.\n  // Before this exception was thrown, there should be `console.error` output\n  // that shows the type (Symbol, Temporal.PlainDate, etc.) that caused the\n  // problem and how that type was used: key, atrribute, input value prop, etc.\n  // In most cases, this console output also shows the component and its\n  // ancestor components where the exception happened.\n  //\n  // eslint-disable-next-line react-internal/safe-string-coercion\n  return '' + value;\n}\nfunction checkKeyStringCoercion(value) {\n  {\n    if (willCoercionThrow(value)) {\n      error('The provided key is an unsupported type %s.' + ' This value must be coerced to a string before before using it here.', typeName(value));\n\n      return testStringCoercion(value); // throw (to help callers find troubleshooting comments)\n    }\n  }\n}\n\nfunction getWrappedName(outerType, innerType, wrapperName) {\n  var displayName = outerType.displayName;\n\n  if (displayName) {\n    return displayName;\n  }\n\n  var functionName = innerType.displayName || innerType.name || '';\n  return functionName !== '' ? wrapperName + \"(\" + functionName + \")\" : wrapperName;\n} // Keep in sync with react-reconciler/getComponentNameFromFiber\n\n\nfunction getContextName(type) {\n  return type.displayName || 'Context';\n} // Note that the reconciler package should generally prefer to use getComponentNameFromFiber() instead.\n\n\nfunction getComponentNameFromType(type) {\n  if (type == null) {\n    // Host root, text node or just invalid type.\n    return null;\n  }\n\n  {\n    if (typeof type.tag === 'number') {\n      error('Received an unexpected object in getComponentNameFromType(). ' + 'This is likely a bug in React. Please file an issue.');\n    }\n  }\n\n  if (typeof type === 'function') {\n    return type.displayName || type.name || null;\n  }\n\n  if (typeof type === 'string') {\n    return type;\n  }\n\n  switch (type) {\n    case REACT_FRAGMENT_TYPE:\n      return 'Fragment';\n\n    case REACT_PORTAL_TYPE:\n      return 'Portal';\n\n    case REACT_PROFILER_TYPE:\n      return 'Profiler';\n\n    case REACT_STRICT_MODE_TYPE:\n      return 'StrictMode';\n\n    case REACT_SUSPENSE_TYPE:\n      return 'Suspense';\n\n    case REACT_SUSPENSE_LIST_TYPE:\n      return 'SuspenseList';\n\n    case REACT_CACHE_TYPE:\n      {\n        return 'Cache';\n      }\n\n  }\n\n  if (typeof type === 'object') {\n    switch (type.$$typeof) {\n      case REACT_CONTEXT_TYPE:\n        var context = type;\n        return getContextName(context) + '.Consumer';\n\n      case REACT_PROVIDER_TYPE:\n        var provider = type;\n        return getContextName(provider._context) + '.Provider';\n\n      case REACT_FORWARD_REF_TYPE:\n        return getWrappedName(type, type.render, 'ForwardRef');\n\n      case REACT_MEMO_TYPE:\n        var outerName = type.displayName || null;\n\n        if (outerName !== null) {\n          return outerName;\n        }\n\n        return getComponentNameFromType(type.type) || 'Memo';\n\n      case REACT_LAZY_TYPE:\n        {\n          var lazyComponent = type;\n          var payload = lazyComponent._payload;\n          var init = lazyComponent._init;\n\n          try {\n            return getComponentNameFromType(init(payload));\n          } catch (x) {\n            return null;\n          }\n        }\n\n      case REACT_SERVER_CONTEXT_TYPE:\n        {\n          var context2 = type;\n          return (context2.displayName || context2._globalName) + '.Provider';\n        }\n\n      // eslint-disable-next-line no-fallthrough\n    }\n  }\n\n  return null;\n}\n\n// $FlowFixMe[method-unbinding]\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\nvar RESERVED_PROPS = {\n  key: true,\n  ref: true,\n  __self: true,\n  __source: true\n};\nvar specialPropKeyWarningShown, specialPropRefWarningShown, didWarnAboutStringRefs;\n\n{\n  didWarnAboutStringRefs = {};\n}\n\nfunction hasValidRef(config) {\n  {\n    if (hasOwnProperty.call(config, 'ref')) {\n      var getter = Object.getOwnPropertyDescriptor(config, 'ref').get;\n\n      if (getter && getter.isReactWarning) {\n        return false;\n      }\n    }\n  }\n\n  return config.ref !== undefined;\n}\n\nfunction hasValidKey(config) {\n  {\n    if (hasOwnProperty.call(config, 'key')) {\n      var getter = Object.getOwnPropertyDescriptor(config, 'key').get;\n\n      if (getter && getter.isReactWarning) {\n        return false;\n      }\n    }\n  }\n\n  return config.key !== undefined;\n}\n\nfunction defineKeyPropWarningGetter(props, displayName) {\n  var warnAboutAccessingKey = function () {\n    {\n      if (!specialPropKeyWarningShown) {\n        specialPropKeyWarningShown = true;\n\n        error('%s: `key` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://reactjs.org/link/special-props)', displayName);\n      }\n    }\n  };\n\n  warnAboutAccessingKey.isReactWarning = true;\n  Object.defineProperty(props, 'key', {\n    get: warnAboutAccessingKey,\n    configurable: true\n  });\n}\n\nfunction defineRefPropWarningGetter(props, displayName) {\n  var warnAboutAccessingRef = function () {\n    {\n      if (!specialPropRefWarningShown) {\n        specialPropRefWarningShown = true;\n\n        error('%s: `ref` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://reactjs.org/link/special-props)', displayName);\n      }\n    }\n  };\n\n  warnAboutAccessingRef.isReactWarning = true;\n  Object.defineProperty(props, 'ref', {\n    get: warnAboutAccessingRef,\n    configurable: true\n  });\n}\n\nfunction warnIfStringRefCannotBeAutoConverted(config) {\n  {\n    if (typeof config.ref === 'string' && ReactCurrentOwner.current && config.__self && ReactCurrentOwner.current.stateNode !== config.__self) {\n      var componentName = getComponentNameFromType(ReactCurrentOwner.current.type);\n\n      if (!didWarnAboutStringRefs[componentName]) {\n        error('Component \"%s\" contains the string ref \"%s\". ' + 'Support for string refs will be removed in a future major release. ' + 'This case cannot be automatically converted to an arrow function. ' + 'We ask you to manually fix this case by using useRef() or createRef() instead. ' + 'Learn more about using refs safely here: ' + 'https://reactjs.org/link/strict-mode-string-ref', componentName, config.ref);\n\n        didWarnAboutStringRefs[componentName] = true;\n      }\n    }\n  }\n}\n/**\n * Factory method to create a new React element. This no longer adheres to\n * the class pattern, so do not use new to call it. Also, instanceof check\n * will not work. Instead test $$typeof field against Symbol.for('react.element') to check\n * if something is a React Element.\n *\n * @param {*} type\n * @param {*} props\n * @param {*} key\n * @param {string|object} ref\n * @param {*} owner\n * @param {*} self A *temporary* helper to detect places where `this` is\n * different from the `owner` when React.createElement is called, so that we\n * can warn. We want to get rid of owner and replace string `ref`s with arrow\n * functions, and as long as `this` and owner are the same, there will be no\n * change in behavior.\n * @param {*} source An annotation object (added by a transpiler or otherwise)\n * indicating filename, line number, and/or other information.\n * @internal\n */\n\n\nvar ReactElement = function (type, key, ref, self, source, owner, props) {\n  var element = {\n    // This tag allows us to uniquely identify this as a React Element\n    $$typeof: REACT_ELEMENT_TYPE,\n    // Built-in properties that belong on the element\n    type: type,\n    key: key,\n    ref: ref,\n    props: props,\n    // Record the component responsible for creating this element.\n    _owner: owner\n  };\n\n  {\n    // The validation flag is currently mutative. We put it on\n    // an external backing store so that we can freeze the whole object.\n    // This can be replaced with a WeakMap once they are implemented in\n    // commonly used development environments.\n    element._store = {}; // To make comparing ReactElements easier for testing purposes, we make\n    // the validation flag non-enumerable (where possible, which should\n    // include every environment we run tests in), so the test framework\n    // ignores it.\n\n    Object.defineProperty(element._store, 'validated', {\n      configurable: false,\n      enumerable: false,\n      writable: true,\n      value: false\n    }); // self and source are DEV only properties.\n\n    Object.defineProperty(element, '_self', {\n      configurable: false,\n      enumerable: false,\n      writable: false,\n      value: self\n    }); // Two elements created in two different places should be considered\n    // equal for testing purposes and therefore we hide it from enumeration.\n\n    Object.defineProperty(element, '_source', {\n      configurable: false,\n      enumerable: false,\n      writable: false,\n      value: source\n    });\n\n    if (Object.freeze) {\n      Object.freeze(element.props);\n      Object.freeze(element);\n    }\n  }\n\n  return element;\n};\n/**\n * Create and return a new ReactElement of the given type.\n * See https://reactjs.org/docs/react-api.html#createelement\n */\n\nfunction createElement(type, config, children) {\n  var propName; // Reserved names are extracted\n\n  var props = {};\n  var key = null;\n  var ref = null;\n  var self = null;\n  var source = null;\n\n  if (config != null) {\n    if (hasValidRef(config)) {\n      ref = config.ref;\n\n      {\n        warnIfStringRefCannotBeAutoConverted(config);\n      }\n    }\n\n    if (hasValidKey(config)) {\n      {\n        checkKeyStringCoercion(config.key);\n      }\n\n      key = '' + config.key;\n    }\n\n    self = config.__self === undefined ? null : config.__self;\n    source = config.__source === undefined ? null : config.__source; // Remaining properties are added to a new props object\n\n    for (propName in config) {\n      if (hasOwnProperty.call(config, propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {\n        props[propName] = config[propName];\n      }\n    }\n  } // Children can be more than one argument, and those are transferred onto\n  // the newly allocated props object.\n\n\n  var childrenLength = arguments.length - 2;\n\n  if (childrenLength === 1) {\n    props.children = children;\n  } else if (childrenLength > 1) {\n    var childArray = Array(childrenLength);\n\n    for (var i = 0; i < childrenLength; i++) {\n      childArray[i] = arguments[i + 2];\n    }\n\n    {\n      if (Object.freeze) {\n        Object.freeze(childArray);\n      }\n    }\n\n    props.children = childArray;\n  } // Resolve default props\n\n\n  if (type && type.defaultProps) {\n    var defaultProps = type.defaultProps;\n\n    for (propName in defaultProps) {\n      if (props[propName] === undefined) {\n        props[propName] = defaultProps[propName];\n      }\n    }\n  }\n\n  {\n    if (key || ref) {\n      var displayName = typeof type === 'function' ? type.displayName || type.name || 'Unknown' : type;\n\n      if (key) {\n        defineKeyPropWarningGetter(props, displayName);\n      }\n\n      if (ref) {\n        defineRefPropWarningGetter(props, displayName);\n      }\n    }\n  }\n\n  return ReactElement(type, key, ref, self, source, ReactCurrentOwner.current, props);\n}\nfunction cloneAndReplaceKey(oldElement, newKey) {\n  var newElement = ReactElement(oldElement.type, newKey, oldElement.ref, oldElement._self, oldElement._source, oldElement._owner, oldElement.props);\n  return newElement;\n}\n/**\n * Clone and return a new ReactElement using element as the starting point.\n * See https://reactjs.org/docs/react-api.html#cloneelement\n */\n\nfunction cloneElement(element, config, children) {\n  if (element === null || element === undefined) {\n    throw new Error(\"React.cloneElement(...): The argument must be a React element, but you passed \" + element + \".\");\n  }\n\n  var propName; // Original props are copied\n\n  var props = assign({}, element.props); // Reserved names are extracted\n\n  var key = element.key;\n  var ref = element.ref; // Self is preserved since the owner is preserved.\n\n  var self = element._self; // Source is preserved since cloneElement is unlikely to be targeted by a\n  // transpiler, and the original source is probably a better indicator of the\n  // true owner.\n\n  var source = element._source; // Owner will be preserved, unless ref is overridden\n\n  var owner = element._owner;\n\n  if (config != null) {\n    if (hasValidRef(config)) {\n      // Silently steal the ref from the parent.\n      ref = config.ref;\n      owner = ReactCurrentOwner.current;\n    }\n\n    if (hasValidKey(config)) {\n      {\n        checkKeyStringCoercion(config.key);\n      }\n\n      key = '' + config.key;\n    } // Remaining properties override existing props\n\n\n    var defaultProps;\n\n    if (element.type && element.type.defaultProps) {\n      defaultProps = element.type.defaultProps;\n    }\n\n    for (propName in config) {\n      if (hasOwnProperty.call(config, propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {\n        if (config[propName] === undefined && defaultProps !== undefined) {\n          // Resolve default props\n          props[propName] = defaultProps[propName];\n        } else {\n          props[propName] = config[propName];\n        }\n      }\n    }\n  } // Children can be more than one argument, and those are transferred onto\n  // the newly allocated props object.\n\n\n  var childrenLength = arguments.length - 2;\n\n  if (childrenLength === 1) {\n    props.children = children;\n  } else if (childrenLength > 1) {\n    var childArray = Array(childrenLength);\n\n    for (var i = 0; i < childrenLength; i++) {\n      childArray[i] = arguments[i + 2];\n    }\n\n    props.children = childArray;\n  }\n\n  return ReactElement(element.type, key, ref, self, source, owner, props);\n}\n/**\n * Verifies the object is a ReactElement.\n * See https://reactjs.org/docs/react-api.html#isvalidelement\n * @param {?object} object\n * @return {boolean} True if `object` is a ReactElement.\n * @final\n */\n\nfunction isValidElement(object) {\n  return typeof object === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;\n}\n\nvar SEPARATOR = '.';\nvar SUBSEPARATOR = ':';\n/**\n * Escape and wrap key so it is safe to use as a reactid\n *\n * @param {string} key to be escaped.\n * @return {string} the escaped key.\n */\n\nfunction escape(key) {\n  var escapeRegex = /[=:]/g;\n  var escaperLookup = {\n    '=': '=0',\n    ':': '=2'\n  };\n  var escapedString = key.replace(escapeRegex, function (match) {\n    return escaperLookup[match];\n  });\n  return '$' + escapedString;\n}\n/**\n * TODO: Test that a single child and an array with one item have the same key\n * pattern.\n */\n\n\nvar didWarnAboutMaps = false;\nvar userProvidedKeyEscapeRegex = /\\/+/g;\n\nfunction escapeUserProvidedKey(text) {\n  return text.replace(userProvidedKeyEscapeRegex, '$&/');\n}\n/**\n * Generate a key string that identifies a element within a set.\n *\n * @param {*} element A element that could contain a manual key.\n * @param {number} index Index that is used if a manual key is not provided.\n * @return {string}\n */\n\n\nfunction getElementKey(element, index) {\n  // Do some typechecking here since we call this blindly. We want to ensure\n  // that we don't block potential future ES APIs.\n  if (typeof element === 'object' && element !== null && element.key != null) {\n    // Explicit key\n    {\n      checkKeyStringCoercion(element.key);\n    }\n\n    return escape('' + element.key);\n  } // Implicit key determined by the index in the set\n\n\n  return index.toString(36);\n}\n\nfunction mapIntoArray(children, array, escapedPrefix, nameSoFar, callback) {\n  var type = typeof children;\n\n  if (type === 'undefined' || type === 'boolean') {\n    // All of the above are perceived as null.\n    children = null;\n  }\n\n  var invokeCallback = false;\n\n  if (children === null) {\n    invokeCallback = true;\n  } else {\n    switch (type) {\n      case 'string':\n      case 'number':\n        invokeCallback = true;\n        break;\n\n      case 'object':\n        switch (children.$$typeof) {\n          case REACT_ELEMENT_TYPE:\n          case REACT_PORTAL_TYPE:\n            invokeCallback = true;\n        }\n\n    }\n  }\n\n  if (invokeCallback) {\n    var _child = children;\n    var mappedChild = callback(_child); // If it's the only child, treat the name as if it was wrapped in an array\n    // so that it's consistent if the number of children grows:\n\n    var childKey = nameSoFar === '' ? SEPARATOR + getElementKey(_child, 0) : nameSoFar;\n\n    if (isArray(mappedChild)) {\n      var escapedChildKey = '';\n\n      if (childKey != null) {\n        escapedChildKey = escapeUserProvidedKey(childKey) + '/';\n      }\n\n      mapIntoArray(mappedChild, array, escapedChildKey, '', function (c) {\n        return c;\n      });\n    } else if (mappedChild != null) {\n      if (isValidElement(mappedChild)) {\n        {\n          // The `if` statement here prevents auto-disabling of the safe\n          // coercion ESLint rule, so we must manually disable it below.\n          // $FlowFixMe Flow incorrectly thinks React.Portal doesn't have a key\n          if (mappedChild.key && (!_child || _child.key !== mappedChild.key)) {\n            checkKeyStringCoercion(mappedChild.key);\n          }\n        }\n\n        mappedChild = cloneAndReplaceKey(mappedChild, // Keep both the (mapped) and old keys if they differ, just as\n        // traverseAllChildren used to do for objects as children\n        escapedPrefix + ( // $FlowFixMe Flow incorrectly thinks React.Portal doesn't have a key\n        mappedChild.key && (!_child || _child.key !== mappedChild.key) ? escapeUserProvidedKey( // eslint-disable-next-line react-internal/safe-string-coercion\n        '' + // $FlowFixMe Flow incorrectly thinks existing element's key can be a number\n        mappedChild.key) + '/' : '') + childKey);\n      }\n\n      array.push(mappedChild);\n    }\n\n    return 1;\n  }\n\n  var child;\n  var nextName;\n  var subtreeCount = 0; // Count of children found in the current subtree.\n\n  var nextNamePrefix = nameSoFar === '' ? SEPARATOR : nameSoFar + SUBSEPARATOR;\n\n  if (isArray(children)) {\n    for (var i = 0; i < children.length; i++) {\n      child = children[i];\n      nextName = nextNamePrefix + getElementKey(child, i);\n      subtreeCount += mapIntoArray(child, array, escapedPrefix, nextName, callback);\n    }\n  } else {\n    var iteratorFn = getIteratorFn(children);\n\n    if (typeof iteratorFn === 'function') {\n      var iterableChildren = children;\n\n      {\n        // Warn about using Maps as children\n        if (iteratorFn === iterableChildren.entries) {\n          if (!didWarnAboutMaps) {\n            warn('Using Maps as children is not supported. ' + 'Use an array of keyed ReactElements instead.');\n          }\n\n          didWarnAboutMaps = true;\n        }\n      }\n\n      var iterator = iteratorFn.call(iterableChildren);\n      var step;\n      var ii = 0; // $FlowFixMe `iteratorFn` might return null according to typing.\n\n      while (!(step = iterator.next()).done) {\n        child = step.value;\n        nextName = nextNamePrefix + getElementKey(child, ii++);\n        subtreeCount += mapIntoArray(child, array, escapedPrefix, nextName, callback);\n      }\n    } else if (type === 'object') {\n      // eslint-disable-next-line react-internal/safe-string-coercion\n      var childrenString = String(children);\n      throw new Error(\"Objects are not valid as a React child (found: \" + (childrenString === '[object Object]' ? 'object with keys {' + Object.keys(children).join(', ') + '}' : childrenString) + \"). \" + 'If you meant to render a collection of children, use an array ' + 'instead.');\n    }\n  }\n\n  return subtreeCount;\n}\n\n/**\n * Maps children that are typically specified as `props.children`.\n *\n * See https://reactjs.org/docs/react-api.html#reactchildrenmap\n *\n * The provided mapFunction(child, index) will be called for each\n * leaf child.\n *\n * @param {?*} children Children tree container.\n * @param {function(*, int)} func The map function.\n * @param {*} context Context for mapFunction.\n * @return {object} Object containing the ordered map of results.\n */\nfunction mapChildren(children, func, context) {\n  if (children == null) {\n    return children;\n  }\n\n  var result = [];\n  var count = 0;\n  mapIntoArray(children, result, '', '', function (child) {\n    return func.call(context, child, count++);\n  });\n  return result;\n}\n/**\n * Count the number of children that are typically specified as\n * `props.children`.\n *\n * See https://reactjs.org/docs/react-api.html#reactchildrencount\n *\n * @param {?*} children Children tree container.\n * @return {number} The number of children.\n */\n\n\nfunction countChildren(children) {\n  var n = 0;\n  mapChildren(children, function () {\n    n++; // Don't return anything\n  });\n  return n;\n}\n\n/**\n * Iterates through children that are typically specified as `props.children`.\n *\n * See https://reactjs.org/docs/react-api.html#reactchildrenforeach\n *\n * The provided forEachFunc(child, index) will be called for each\n * leaf child.\n *\n * @param {?*} children Children tree container.\n * @param {function(*, int)} forEachFunc\n * @param {*} forEachContext Context for forEachContext.\n */\nfunction forEachChildren(children, forEachFunc, forEachContext) {\n  mapChildren(children, function () {\n    forEachFunc.apply(this, arguments); // Don't return anything.\n  }, forEachContext);\n}\n/**\n * Flatten a children object (typically specified as `props.children`) and\n * return an array with appropriately re-keyed children.\n *\n * See https://reactjs.org/docs/react-api.html#reactchildrentoarray\n */\n\n\nfunction toArray(children) {\n  return mapChildren(children, function (child) {\n    return child;\n  }) || [];\n}\n/**\n * Returns the first child in a collection of children and verifies that there\n * is only one child in the collection.\n *\n * See https://reactjs.org/docs/react-api.html#reactchildrenonly\n *\n * The current implementation of this function assumes that a single child gets\n * passed without a wrapper, but the purpose of this helper function is to\n * abstract away the particular structure of children.\n *\n * @param {?object} children Child collection structure.\n * @return {ReactElement} The first and only `ReactElement` contained in the\n * structure.\n */\n\n\nfunction onlyChild(children) {\n  if (!isValidElement(children)) {\n    throw new Error('React.Children.only expected to receive a single React element child.');\n  }\n\n  return children;\n}\n\nfunction createContext(defaultValue) {\n  // TODO: Second argument used to be an optional `calculateChangedBits`\n  // function. Warn to reserve for future use?\n  var context = {\n    $$typeof: REACT_CONTEXT_TYPE,\n    // As a workaround to support multiple concurrent renderers, we categorize\n    // some renderers as primary and others as secondary. We only expect\n    // there to be two concurrent renderers at most: React Native (primary) and\n    // Fabric (secondary); React DOM (primary) and React ART (secondary).\n    // Secondary renderers store their context values on separate fields.\n    _currentValue: defaultValue,\n    _currentValue2: defaultValue,\n    // Used to track how many concurrent renderers this context currently\n    // supports within in a single renderer. Such as parallel server rendering.\n    _threadCount: 0,\n    // These are circular\n    Provider: null,\n    Consumer: null,\n    // Add these to use same hidden class in VM as ServerContext\n    _defaultValue: null,\n    _globalName: null\n  };\n  context.Provider = {\n    $$typeof: REACT_PROVIDER_TYPE,\n    _context: context\n  };\n  var hasWarnedAboutUsingNestedContextConsumers = false;\n  var hasWarnedAboutUsingConsumerProvider = false;\n  var hasWarnedAboutDisplayNameOnConsumer = false;\n\n  {\n    // A separate object, but proxies back to the original context object for\n    // backwards compatibility. It has a different $$typeof, so we can properly\n    // warn for the incorrect usage of Context as a Consumer.\n    var Consumer = {\n      $$typeof: REACT_CONTEXT_TYPE,\n      _context: context\n    }; // $FlowFixMe: Flow complains about not setting a value, which is intentional here\n\n    Object.defineProperties(Consumer, {\n      Provider: {\n        get: function () {\n          if (!hasWarnedAboutUsingConsumerProvider) {\n            hasWarnedAboutUsingConsumerProvider = true;\n\n            error('Rendering <Context.Consumer.Provider> is not supported and will be removed in ' + 'a future major release. Did you mean to render <Context.Provider> instead?');\n          }\n\n          return context.Provider;\n        },\n        set: function (_Provider) {\n          context.Provider = _Provider;\n        }\n      },\n      _currentValue: {\n        get: function () {\n          return context._currentValue;\n        },\n        set: function (_currentValue) {\n          context._currentValue = _currentValue;\n        }\n      },\n      _currentValue2: {\n        get: function () {\n          return context._currentValue2;\n        },\n        set: function (_currentValue2) {\n          context._currentValue2 = _currentValue2;\n        }\n      },\n      _threadCount: {\n        get: function () {\n          return context._threadCount;\n        },\n        set: function (_threadCount) {\n          context._threadCount = _threadCount;\n        }\n      },\n      Consumer: {\n        get: function () {\n          if (!hasWarnedAboutUsingNestedContextConsumers) {\n            hasWarnedAboutUsingNestedContextConsumers = true;\n\n            error('Rendering <Context.Consumer.Consumer> is not supported and will be removed in ' + 'a future major release. Did you mean to render <Context.Consumer> instead?');\n          }\n\n          return context.Consumer;\n        }\n      },\n      displayName: {\n        get: function () {\n          return context.displayName;\n        },\n        set: function (displayName) {\n          if (!hasWarnedAboutDisplayNameOnConsumer) {\n            warn('Setting `displayName` on Context.Consumer has no effect. ' + \"You should set it directly on the context with Context.displayName = '%s'.\", displayName);\n\n            hasWarnedAboutDisplayNameOnConsumer = true;\n          }\n        }\n      }\n    }); // $FlowFixMe: Flow complains about missing properties because it doesn't understand defineProperty\n\n    context.Consumer = Consumer;\n  }\n\n  {\n    context._currentRenderer = null;\n    context._currentRenderer2 = null;\n  }\n\n  return context;\n}\n\nvar Uninitialized = -1;\nvar Pending = 0;\nvar Resolved = 1;\nvar Rejected = 2;\n\nfunction lazyInitializer(payload) {\n  if (payload._status === Uninitialized) {\n    var ctor = payload._result;\n    var thenable = ctor(); // Transition to the next state.\n    // This might throw either because it's missing or throws. If so, we treat it\n    // as still uninitialized and try again next time. Which is the same as what\n    // happens if the ctor or any wrappers processing the ctor throws. This might\n    // end up fixing it if the resolution was a concurrency bug.\n\n    thenable.then(function (moduleObject) {\n      if (payload._status === Pending || payload._status === Uninitialized) {\n        // Transition to the next state.\n        var resolved = payload;\n        resolved._status = Resolved;\n        resolved._result = moduleObject;\n      }\n    }, function (error) {\n      if (payload._status === Pending || payload._status === Uninitialized) {\n        // Transition to the next state.\n        var rejected = payload;\n        rejected._status = Rejected;\n        rejected._result = error;\n      }\n    });\n\n    if (payload._status === Uninitialized) {\n      // In case, we're still uninitialized, then we're waiting for the thenable\n      // to resolve. Set it as pending in the meantime.\n      var pending = payload;\n      pending._status = Pending;\n      pending._result = thenable;\n    }\n  }\n\n  if (payload._status === Resolved) {\n    var moduleObject = payload._result;\n\n    {\n      if (moduleObject === undefined) {\n        error('lazy: Expected the result of a dynamic imp' + 'ort() call. ' + 'Instead received: %s\\n\\nYour code should look like: \\n  ' + // Break up imports to avoid accidentally parsing them as dependencies.\n        'const MyComponent = lazy(() => imp' + \"ort('./MyComponent'))\\n\\n\" + 'Did you accidentally put curly braces around the import?', moduleObject);\n      }\n    }\n\n    {\n      if (!('default' in moduleObject)) {\n        error('lazy: Expected the result of a dynamic imp' + 'ort() call. ' + 'Instead received: %s\\n\\nYour code should look like: \\n  ' + // Break up imports to avoid accidentally parsing them as dependencies.\n        'const MyComponent = lazy(() => imp' + \"ort('./MyComponent'))\", moduleObject);\n      }\n    }\n\n    return moduleObject.default;\n  } else {\n    throw payload._result;\n  }\n}\n\nfunction lazy(ctor) {\n  var payload = {\n    // We use these fields to store the result.\n    _status: Uninitialized,\n    _result: ctor\n  };\n  var lazyType = {\n    $$typeof: REACT_LAZY_TYPE,\n    _payload: payload,\n    _init: lazyInitializer\n  };\n\n  {\n    // In production, this would just set it on the object.\n    var defaultProps;\n    var propTypes; // $FlowFixMe\n\n    Object.defineProperties(lazyType, {\n      defaultProps: {\n        configurable: true,\n        get: function () {\n          return defaultProps;\n        },\n        set: function (newDefaultProps) {\n          error('React.lazy(...): It is not supported to assign `defaultProps` to ' + 'a lazy component import. Either specify them where the component ' + 'is defined, or create a wrapping component around it.');\n\n          defaultProps = newDefaultProps; // Match production behavior more closely:\n          // $FlowFixMe\n\n          Object.defineProperty(lazyType, 'defaultProps', {\n            enumerable: true\n          });\n        }\n      },\n      propTypes: {\n        configurable: true,\n        get: function () {\n          return propTypes;\n        },\n        set: function (newPropTypes) {\n          error('React.lazy(...): It is not supported to assign `propTypes` to ' + 'a lazy component import. Either specify them where the component ' + 'is defined, or create a wrapping component around it.');\n\n          propTypes = newPropTypes; // Match production behavior more closely:\n          // $FlowFixMe\n\n          Object.defineProperty(lazyType, 'propTypes', {\n            enumerable: true\n          });\n        }\n      }\n    });\n  }\n\n  return lazyType;\n}\n\nfunction forwardRef(render) {\n  {\n    if (render != null && render.$$typeof === REACT_MEMO_TYPE) {\n      error('forwardRef requires a render function but received a `memo` ' + 'component. Instead of forwardRef(memo(...)), use ' + 'memo(forwardRef(...)).');\n    } else if (typeof render !== 'function') {\n      error('forwardRef requires a render function but was given %s.', render === null ? 'null' : typeof render);\n    } else {\n      if (render.length !== 0 && render.length !== 2) {\n        error('forwardRef render functions accept exactly two parameters: props and ref. %s', render.length === 1 ? 'Did you forget to use the ref parameter?' : 'Any additional parameter will be undefined.');\n      }\n    }\n\n    if (render != null) {\n      if (render.defaultProps != null || render.propTypes != null) {\n        error('forwardRef render functions do not support propTypes or defaultProps. ' + 'Did you accidentally pass a React component?');\n      }\n    }\n  }\n\n  var elementType = {\n    $$typeof: REACT_FORWARD_REF_TYPE,\n    render: render\n  };\n\n  {\n    var ownName;\n    Object.defineProperty(elementType, 'displayName', {\n      enumerable: false,\n      configurable: true,\n      get: function () {\n        return ownName;\n      },\n      set: function (name) {\n        ownName = name; // The inner component shouldn't inherit this display name in most cases,\n        // because the component may be used elsewhere.\n        // But it's nice for anonymous functions to inherit the name,\n        // so that our component-stack generation logic will display their frames.\n        // An anonymous function generally suggests a pattern like:\n        //   React.forwardRef((props, ref) => {...});\n        // This kind of inner function is not used elsewhere so the side effect is okay.\n\n        if (!render.name && !render.displayName) {\n          render.displayName = name;\n        }\n      }\n    });\n  }\n\n  return elementType;\n}\n\nvar REACT_MODULE_REFERENCE = Symbol.for('react.module.reference');\nfunction isValidElementType(type) {\n  if (typeof type === 'string' || typeof type === 'function') {\n    return true;\n  } // Note: typeof might be other than 'symbol' or 'number' (e.g. if it's a polyfill).\n\n\n  if (type === REACT_FRAGMENT_TYPE || type === REACT_PROFILER_TYPE || enableDebugTracing  || type === REACT_STRICT_MODE_TYPE || type === REACT_SUSPENSE_TYPE || type === REACT_SUSPENSE_LIST_TYPE || enableLegacyHidden  || type === REACT_OFFSCREEN_TYPE || enableScopeAPI  || enableCacheElement  || enableTransitionTracing ) {\n    return true;\n  }\n\n  if (typeof type === 'object' && type !== null) {\n    if (type.$$typeof === REACT_LAZY_TYPE || type.$$typeof === REACT_MEMO_TYPE || type.$$typeof === REACT_PROVIDER_TYPE || type.$$typeof === REACT_CONTEXT_TYPE || type.$$typeof === REACT_FORWARD_REF_TYPE || // This needs to include all possible module reference object\n    // types supported by any Flight configuration anywhere since\n    // we don't know which Flight build this will end up being used\n    // with.\n    type.$$typeof === REACT_MODULE_REFERENCE || type.getModuleId !== undefined) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction memo(type, compare) {\n  {\n    if (!isValidElementType(type)) {\n      error('memo: The first argument must be a component. Instead ' + 'received: %s', type === null ? 'null' : typeof type);\n    }\n  }\n\n  var elementType = {\n    $$typeof: REACT_MEMO_TYPE,\n    type: type,\n    compare: compare === undefined ? null : compare\n  };\n\n  {\n    var ownName;\n    Object.defineProperty(elementType, 'displayName', {\n      enumerable: false,\n      configurable: true,\n      get: function () {\n        return ownName;\n      },\n      set: function (name) {\n        ownName = name; // The inner component shouldn't inherit this display name in most cases,\n        // because the component may be used elsewhere.\n        // But it's nice for anonymous functions to inherit the name,\n        // so that our component-stack generation logic will display their frames.\n        // An anonymous function generally suggests a pattern like:\n        //   React.memo((props) => {...});\n        // This kind of inner function is not used elsewhere so the side effect is okay.\n\n        if (!type.name && !type.displayName) {\n          type.displayName = name;\n        }\n      }\n    });\n  }\n\n  return elementType;\n}\n\nvar UNTERMINATED = 0;\nvar TERMINATED = 1;\nvar ERRORED = 2;\n\nfunction createCacheRoot() {\n  return new WeakMap();\n}\n\nfunction createCacheNode() {\n  return {\n    s: UNTERMINATED,\n    // status, represents whether the cached computation returned a value or threw an error\n    v: undefined,\n    // value, either the cached result or an error, depending on s\n    o: null,\n    // object cache, a WeakMap where non-primitive arguments are stored\n    p: null // primitive cache, a regular Map where primitive arguments are stored.\n\n  };\n}\n\nfunction cache(fn) {\n  return function () {\n    var dispatcher = ReactCurrentCache.current;\n\n    if (!dispatcher) {\n      // If there is no dispatcher, then we treat this as not being cached.\n      // $FlowFixMe: We don't want to use rest arguments since we transpile the code.\n      return fn.apply(null, arguments);\n    }\n\n    var fnMap = dispatcher.getCacheForType(createCacheRoot);\n    var fnNode = fnMap.get(fn);\n    var cacheNode;\n\n    if (fnNode === undefined) {\n      cacheNode = createCacheNode();\n      fnMap.set(fn, cacheNode);\n    } else {\n      cacheNode = fnNode;\n    }\n\n    for (var i = 0, l = arguments.length; i < l; i++) {\n      var arg = arguments[i];\n\n      if (typeof arg === 'function' || typeof arg === 'object' && arg !== null) {\n        // Objects go into a WeakMap\n        var objectCache = cacheNode.o;\n\n        if (objectCache === null) {\n          cacheNode.o = objectCache = new WeakMap();\n        }\n\n        var objectNode = objectCache.get(arg);\n\n        if (objectNode === undefined) {\n          cacheNode = createCacheNode();\n          objectCache.set(arg, cacheNode);\n        } else {\n          cacheNode = objectNode;\n        }\n      } else {\n        // Primitives go into a regular Map\n        var primitiveCache = cacheNode.p;\n\n        if (primitiveCache === null) {\n          cacheNode.p = primitiveCache = new Map();\n        }\n\n        var primitiveNode = primitiveCache.get(arg);\n\n        if (primitiveNode === undefined) {\n          cacheNode = createCacheNode();\n          primitiveCache.set(arg, cacheNode);\n        } else {\n          cacheNode = primitiveNode;\n        }\n      }\n    }\n\n    if (cacheNode.s === TERMINATED) {\n      return cacheNode.v;\n    }\n\n    if (cacheNode.s === ERRORED) {\n      throw cacheNode.v;\n    }\n\n    try {\n      // $FlowFixMe: We don't want to use rest arguments since we transpile the code.\n      var result = fn.apply(null, arguments);\n      var terminatedNode = cacheNode;\n      terminatedNode.s = TERMINATED;\n      terminatedNode.v = result;\n      return result;\n    } catch (error) {\n      // We store the first error that's thrown and rethrow it.\n      var erroredNode = cacheNode;\n      erroredNode.s = ERRORED;\n      erroredNode.v = error;\n      throw error;\n    }\n  };\n}\n\nfunction resolveDispatcher() {\n  var dispatcher = ReactCurrentDispatcher.current;\n\n  {\n    if (dispatcher === null) {\n      error('Invalid hook call. Hooks can only be called inside of the body of a function component. This could happen for' + ' one of the following reasons:\\n' + '1. You might have mismatching versions of React and the renderer (such as React DOM)\\n' + '2. You might be breaking the Rules of Hooks\\n' + '3. You might have more than one copy of React in the same app\\n' + 'See https://reactjs.org/link/invalid-hook-call for tips about how to debug and fix this problem.');\n    }\n  } // Will result in a null access error if accessed outside render phase. We\n  // intentionally don't throw our own error because this is in a hot path.\n  // Also helps ensure this is inlined.\n\n\n  return dispatcher;\n}\nfunction useContext(Context) {\n  var dispatcher = resolveDispatcher();\n\n  {\n    // TODO: add a more generic warning for invalid values.\n    if (Context._context !== undefined) {\n      var realContext = Context._context; // Don't deduplicate because this legitimately causes bugs\n      // and nobody should be using this in existing code.\n\n      if (realContext.Consumer === Context) {\n        error('Calling useContext(Context.Consumer) is not supported, may cause bugs, and will be ' + 'removed in a future major release. Did you mean to call useContext(Context) instead?');\n      } else if (realContext.Provider === Context) {\n        error('Calling useContext(Context.Provider) is not supported. ' + 'Did you mean to call useContext(Context) instead?');\n      }\n    }\n  }\n\n  return dispatcher.useContext(Context);\n}\nfunction useState(initialState) {\n  var dispatcher = resolveDispatcher();\n  return dispatcher.useState(initialState);\n}\nfunction useReducer(reducer, initialArg, init) {\n  var dispatcher = resolveDispatcher();\n  return dispatcher.useReducer(reducer, initialArg, init);\n}\nfunction useRef(initialValue) {\n  var dispatcher = resolveDispatcher();\n  return dispatcher.useRef(initialValue);\n}\nfunction useEffect(create, deps) {\n  var dispatcher = resolveDispatcher();\n  return dispatcher.useEffect(create, deps);\n}\nfunction useInsertionEffect(create, deps) {\n  var dispatcher = resolveDispatcher();\n  return dispatcher.useInsertionEffect(create, deps);\n}\nfunction useLayoutEffect(create, deps) {\n  var dispatcher = resolveDispatcher();\n  return dispatcher.useLayoutEffect(create, deps);\n}\nfunction useCallback(callback, deps) {\n  var dispatcher = resolveDispatcher();\n  return dispatcher.useCallback(callback, deps);\n}\nfunction useMemo(create, deps) {\n  var dispatcher = resolveDispatcher();\n  return dispatcher.useMemo(create, deps);\n}\nfunction useImperativeHandle(ref, create, deps) {\n  var dispatcher = resolveDispatcher();\n  return dispatcher.useImperativeHandle(ref, create, deps);\n}\nfunction useDebugValue(value, formatterFn) {\n  {\n    var dispatcher = resolveDispatcher();\n    return dispatcher.useDebugValue(value, formatterFn);\n  }\n}\nfunction useTransition() {\n  var dispatcher = resolveDispatcher();\n  return dispatcher.useTransition();\n}\nfunction useDeferredValue(value) {\n  var dispatcher = resolveDispatcher();\n  return dispatcher.useDeferredValue(value);\n}\nfunction useId() {\n  var dispatcher = resolveDispatcher();\n  return dispatcher.useId();\n}\nfunction useSyncExternalStore(subscribe, getSnapshot, getServerSnapshot) {\n  var dispatcher = resolveDispatcher();\n  return dispatcher.useSyncExternalStore(subscribe, getSnapshot, getServerSnapshot);\n}\nfunction useCacheRefresh() {\n  var dispatcher = resolveDispatcher(); // $FlowFixMe This is unstable, thus optional\n\n  return dispatcher.useCacheRefresh();\n}\nfunction use(usable) {\n  var dispatcher = resolveDispatcher(); // $FlowFixMe This is unstable, thus optional\n\n  return dispatcher.use(usable);\n}\n\n// Helpers to patch console.logs to avoid logging during side-effect free\n// replaying on render function. This currently only patches the object\n// lazily which won't cover if the log function was extracted eagerly.\n// We could also eagerly patch the method.\nvar disabledDepth = 0;\nvar prevLog;\nvar prevInfo;\nvar prevWarn;\nvar prevError;\nvar prevGroup;\nvar prevGroupCollapsed;\nvar prevGroupEnd;\n\nfunction disabledLog() {}\n\ndisabledLog.__reactDisabledLog = true;\nfunction disableLogs() {\n  {\n    if (disabledDepth === 0) {\n      /* eslint-disable react-internal/no-production-logging */\n      prevLog = console.log;\n      prevInfo = console.info;\n      prevWarn = console.warn;\n      prevError = console.error;\n      prevGroup = console.group;\n      prevGroupCollapsed = console.groupCollapsed;\n      prevGroupEnd = console.groupEnd; // https://github.com/facebook/react/issues/19099\n\n      var props = {\n        configurable: true,\n        enumerable: true,\n        value: disabledLog,\n        writable: true\n      }; // $FlowFixMe Flow thinks console is immutable.\n\n      Object.defineProperties(console, {\n        info: props,\n        log: props,\n        warn: props,\n        error: props,\n        group: props,\n        groupCollapsed: props,\n        groupEnd: props\n      });\n      /* eslint-enable react-internal/no-production-logging */\n    }\n\n    disabledDepth++;\n  }\n}\nfunction reenableLogs() {\n  {\n    disabledDepth--;\n\n    if (disabledDepth === 0) {\n      /* eslint-disable react-internal/no-production-logging */\n      var props = {\n        configurable: true,\n        enumerable: true,\n        writable: true\n      }; // $FlowFixMe Flow thinks console is immutable.\n\n      Object.defineProperties(console, {\n        log: assign({}, props, {\n          value: prevLog\n        }),\n        info: assign({}, props, {\n          value: prevInfo\n        }),\n        warn: assign({}, props, {\n          value: prevWarn\n        }),\n        error: assign({}, props, {\n          value: prevError\n        }),\n        group: assign({}, props, {\n          value: prevGroup\n        }),\n        groupCollapsed: assign({}, props, {\n          value: prevGroupCollapsed\n        }),\n        groupEnd: assign({}, props, {\n          value: prevGroupEnd\n        })\n      });\n      /* eslint-enable react-internal/no-production-logging */\n    }\n\n    if (disabledDepth < 0) {\n      error('disabledDepth fell below zero. ' + 'This is a bug in React. Please file an issue.');\n    }\n  }\n}\n\nvar ReactCurrentDispatcher$1 = ReactSharedInternals.ReactCurrentDispatcher;\nvar prefix;\nfunction describeBuiltInComponentFrame(name, source, ownerFn) {\n  {\n    if (prefix === undefined) {\n      // Extract the VM specific prefix used by each line.\n      try {\n        throw Error();\n      } catch (x) {\n        var match = x.stack.trim().match(/\\n( *(at )?)/);\n        prefix = match && match[1] || '';\n      }\n    } // We use the prefix to ensure our stacks line up with native stack frames.\n\n\n    return '\\n' + prefix + name;\n  }\n}\nvar reentry = false;\nvar componentFrameCache;\n\n{\n  var PossiblyWeakMap = typeof WeakMap === 'function' ? WeakMap : Map;\n  componentFrameCache = new PossiblyWeakMap();\n}\n\nfunction describeNativeComponentFrame(fn, construct) {\n  // If something asked for a stack inside a fake render, it should get ignored.\n  if ( !fn || reentry) {\n    return '';\n  }\n\n  {\n    var frame = componentFrameCache.get(fn);\n\n    if (frame !== undefined) {\n      return frame;\n    }\n  }\n\n  var control;\n  reentry = true;\n  var previousPrepareStackTrace = Error.prepareStackTrace; // $FlowFixMe It does accept undefined.\n\n  Error.prepareStackTrace = undefined;\n  var previousDispatcher;\n\n  {\n    previousDispatcher = ReactCurrentDispatcher$1.current; // Set the dispatcher in DEV because this might be call in the render function\n    // for warnings.\n\n    ReactCurrentDispatcher$1.current = null;\n    disableLogs();\n  }\n\n  try {\n    // This should throw.\n    if (construct) {\n      // Something should be setting the props in the constructor.\n      var Fake = function () {\n        throw Error();\n      }; // $FlowFixMe\n\n\n      Object.defineProperty(Fake.prototype, 'props', {\n        set: function () {\n          // We use a throwing setter instead of frozen or non-writable props\n          // because that won't throw in a non-strict mode function.\n          throw Error();\n        }\n      });\n\n      if (typeof Reflect === 'object' && Reflect.construct) {\n        // We construct a different control for this case to include any extra\n        // frames added by the construct call.\n        try {\n          Reflect.construct(Fake, []);\n        } catch (x) {\n          control = x;\n        }\n\n        Reflect.construct(fn, [], Fake);\n      } else {\n        try {\n          Fake.call();\n        } catch (x) {\n          control = x;\n        } // $FlowFixMe[prop-missing] found when upgrading Flow\n\n\n        fn.call(Fake.prototype);\n      }\n    } else {\n      try {\n        throw Error();\n      } catch (x) {\n        control = x;\n      } // TODO(luna): This will currently only throw if the function component\n      // tries to access React/ReactDOM/props. We should probably make this throw\n      // in simple components too\n\n\n      fn();\n    }\n  } catch (sample) {\n    // This is inlined manually because closure doesn't do it for us.\n    if (sample && control && typeof sample.stack === 'string') {\n      // This extracts the first frame from the sample that isn't also in the control.\n      // Skipping one frame that we assume is the frame that calls the two.\n      var sampleLines = sample.stack.split('\\n');\n      var controlLines = control.stack.split('\\n');\n      var s = sampleLines.length - 1;\n      var c = controlLines.length - 1;\n\n      while (s >= 1 && c >= 0 && sampleLines[s] !== controlLines[c]) {\n        // We expect at least one stack frame to be shared.\n        // Typically this will be the root most one. However, stack frames may be\n        // cut off due to maximum stack limits. In this case, one maybe cut off\n        // earlier than the other. We assume that the sample is longer or the same\n        // and there for cut off earlier. So we should find the root most frame in\n        // the sample somewhere in the control.\n        c--;\n      }\n\n      for (; s >= 1 && c >= 0; s--, c--) {\n        // Next we find the first one that isn't the same which should be the\n        // frame that called our sample function and the control.\n        if (sampleLines[s] !== controlLines[c]) {\n          // In V8, the first line is describing the message but other VMs don't.\n          // If we're about to return the first line, and the control is also on the same\n          // line, that's a pretty good indicator that our sample threw at same line as\n          // the control. I.e. before we entered the sample frame. So we ignore this result.\n          // This can happen if you passed a class to function component, or non-function.\n          if (s !== 1 || c !== 1) {\n            do {\n              s--;\n              c--; // We may still have similar intermediate frames from the construct call.\n              // The next one that isn't the same should be our match though.\n\n              if (c < 0 || sampleLines[s] !== controlLines[c]) {\n                // V8 adds a \"new\" prefix for native classes. Let's remove it to make it prettier.\n                var _frame = '\\n' + sampleLines[s].replace(' at new ', ' at '); // If our component frame is labeled \"<anonymous>\"\n                // but we have a user-provided \"displayName\"\n                // splice it in to make the stack more readable.\n\n\n                if (fn.displayName && _frame.includes('<anonymous>')) {\n                  _frame = _frame.replace('<anonymous>', fn.displayName);\n                }\n\n                {\n                  if (typeof fn === 'function') {\n                    componentFrameCache.set(fn, _frame);\n                  }\n                } // Return the line we found.\n\n\n                return _frame;\n              }\n            } while (s >= 1 && c >= 0);\n          }\n\n          break;\n        }\n      }\n    }\n  } finally {\n    reentry = false;\n\n    {\n      ReactCurrentDispatcher$1.current = previousDispatcher;\n      reenableLogs();\n    }\n\n    Error.prepareStackTrace = previousPrepareStackTrace;\n  } // Fallback to just using the name if we couldn't make it throw.\n\n\n  var name = fn ? fn.displayName || fn.name : '';\n  var syntheticFrame = name ? describeBuiltInComponentFrame(name) : '';\n\n  {\n    if (typeof fn === 'function') {\n      componentFrameCache.set(fn, syntheticFrame);\n    }\n  }\n\n  return syntheticFrame;\n}\nfunction describeFunctionComponentFrame(fn, source, ownerFn) {\n  {\n    return describeNativeComponentFrame(fn, false);\n  }\n}\n\nfunction shouldConstruct(Component) {\n  var prototype = Component.prototype;\n  return !!(prototype && prototype.isReactComponent);\n}\n\nfunction describeUnknownElementTypeFrameInDEV(type, source, ownerFn) {\n\n  if (type == null) {\n    return '';\n  }\n\n  if (typeof type === 'function') {\n    {\n      return describeNativeComponentFrame(type, shouldConstruct(type));\n    }\n  }\n\n  if (typeof type === 'string') {\n    return describeBuiltInComponentFrame(type);\n  }\n\n  switch (type) {\n    case REACT_SUSPENSE_TYPE:\n      return describeBuiltInComponentFrame('Suspense');\n\n    case REACT_SUSPENSE_LIST_TYPE:\n      return describeBuiltInComponentFrame('SuspenseList');\n  }\n\n  if (typeof type === 'object') {\n    switch (type.$$typeof) {\n      case REACT_FORWARD_REF_TYPE:\n        return describeFunctionComponentFrame(type.render);\n\n      case REACT_MEMO_TYPE:\n        // Memo may contain any component type so we recursively resolve it.\n        return describeUnknownElementTypeFrameInDEV(type.type, source, ownerFn);\n\n      case REACT_LAZY_TYPE:\n        {\n          var lazyComponent = type;\n          var payload = lazyComponent._payload;\n          var init = lazyComponent._init;\n\n          try {\n            // Lazy may contain any component type so we recursively resolve it.\n            return describeUnknownElementTypeFrameInDEV(init(payload), source, ownerFn);\n          } catch (x) {}\n        }\n    }\n  }\n\n  return '';\n}\n\nvar loggedTypeFailures = {};\nvar ReactDebugCurrentFrame$1 = ReactSharedInternals.ReactDebugCurrentFrame;\n\nfunction setCurrentlyValidatingElement(element) {\n  {\n    if (element) {\n      var owner = element._owner;\n      var stack = describeUnknownElementTypeFrameInDEV(element.type, element._source, owner ? owner.type : null);\n      ReactDebugCurrentFrame$1.setExtraStackFrame(stack);\n    } else {\n      ReactDebugCurrentFrame$1.setExtraStackFrame(null);\n    }\n  }\n}\n\nfunction checkPropTypes(typeSpecs, values, location, componentName, element) {\n  {\n    // $FlowFixMe This is okay but Flow doesn't know it.\n    var has = Function.call.bind(hasOwnProperty);\n\n    for (var typeSpecName in typeSpecs) {\n      if (has(typeSpecs, typeSpecName)) {\n        var error$1 = void 0; // Prop type validation may throw. In case they do, we don't want to\n        // fail the render phase where it didn't fail before. So we log it.\n        // After these have been cleaned up, we'll let them throw.\n\n        try {\n          // This is intentionally an invariant that gets caught. It's the same\n          // behavior as without this statement except with a better message.\n          if (typeof typeSpecs[typeSpecName] !== 'function') {\n            // eslint-disable-next-line react-internal/prod-error-codes\n            var err = Error((componentName || 'React class') + ': ' + location + ' type `' + typeSpecName + '` is invalid; ' + 'it must be a function, usually from the `prop-types` package, but received `' + typeof typeSpecs[typeSpecName] + '`.' + 'This often happens because of typos such as `PropTypes.function` instead of `PropTypes.func`.');\n            err.name = 'Invariant Violation';\n            throw err;\n          }\n\n          error$1 = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED');\n        } catch (ex) {\n          error$1 = ex;\n        }\n\n        if (error$1 && !(error$1 instanceof Error)) {\n          setCurrentlyValidatingElement(element);\n\n          error('%s: type specification of %s' + ' `%s` is invalid; the type checker ' + 'function must return `null` or an `Error` but returned a %s. ' + 'You may have forgotten to pass an argument to the type checker ' + 'creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and ' + 'shape all require an argument).', componentName || 'React class', location, typeSpecName, typeof error$1);\n\n          setCurrentlyValidatingElement(null);\n        }\n\n        if (error$1 instanceof Error && !(error$1.message in loggedTypeFailures)) {\n          // Only monitor this failure once because there tends to be a lot of the\n          // same error.\n          loggedTypeFailures[error$1.message] = true;\n          setCurrentlyValidatingElement(element);\n\n          error('Failed %s type: %s', location, error$1.message);\n\n          setCurrentlyValidatingElement(null);\n        }\n      }\n    }\n  }\n}\n\nfunction setCurrentlyValidatingElement$1(element) {\n  {\n    if (element) {\n      var owner = element._owner;\n      var stack = describeUnknownElementTypeFrameInDEV(element.type, element._source, owner ? owner.type : null);\n      setExtraStackFrame(stack);\n    } else {\n      setExtraStackFrame(null);\n    }\n  }\n}\n\nvar propTypesMisspellWarningShown;\n\n{\n  propTypesMisspellWarningShown = false;\n}\n\nfunction getDeclarationErrorAddendum() {\n  if (ReactCurrentOwner.current) {\n    var name = getComponentNameFromType(ReactCurrentOwner.current.type);\n\n    if (name) {\n      return '\\n\\nCheck the render method of `' + name + '`.';\n    }\n  }\n\n  return '';\n}\n\nfunction getSourceInfoErrorAddendum(source) {\n  if (source !== undefined) {\n    var fileName = source.fileName.replace(/^.*[\\\\\\/]/, '');\n    var lineNumber = source.lineNumber;\n    return '\\n\\nCheck your code at ' + fileName + ':' + lineNumber + '.';\n  }\n\n  return '';\n}\n\nfunction getSourceInfoErrorAddendumForProps(elementProps) {\n  if (elementProps !== null && elementProps !== undefined) {\n    return getSourceInfoErrorAddendum(elementProps.__source);\n  }\n\n  return '';\n}\n/**\n * Warn if there's no key explicitly set on dynamic arrays of children or\n * object keys are not valid. This allows us to keep track of children between\n * updates.\n */\n\n\nvar ownerHasKeyUseWarning = {};\n\nfunction getCurrentComponentErrorInfo(parentType) {\n  var info = getDeclarationErrorAddendum();\n\n  if (!info) {\n    var parentName = typeof parentType === 'string' ? parentType : parentType.displayName || parentType.name;\n\n    if (parentName) {\n      info = \"\\n\\nCheck the top-level render call using <\" + parentName + \">.\";\n    }\n  }\n\n  return info;\n}\n/**\n * Warn if the element doesn't have an explicit key assigned to it.\n * This element is in an array. The array could grow and shrink or be\n * reordered. All children that haven't already been validated are required to\n * have a \"key\" property assigned to it. Error statuses are cached so a warning\n * will only be shown once.\n *\n * @internal\n * @param {ReactElement} element Element that requires a key.\n * @param {*} parentType element's parent's type.\n */\n\n\nfunction validateExplicitKey(element, parentType) {\n  if (!element._store || element._store.validated || element.key != null) {\n    return;\n  }\n\n  element._store.validated = true;\n  var currentComponentErrorInfo = getCurrentComponentErrorInfo(parentType);\n\n  if (ownerHasKeyUseWarning[currentComponentErrorInfo]) {\n    return;\n  }\n\n  ownerHasKeyUseWarning[currentComponentErrorInfo] = true; // Usually the current owner is the offender, but if it accepts children as a\n  // property, it may be the creator of the child that's responsible for\n  // assigning it a key.\n\n  var childOwner = '';\n\n  if (element && element._owner && element._owner !== ReactCurrentOwner.current) {\n    // Give the component that originally created this child.\n    childOwner = \" It was passed a child from \" + getComponentNameFromType(element._owner.type) + \".\";\n  }\n\n  {\n    setCurrentlyValidatingElement$1(element);\n\n    error('Each child in a list should have a unique \"key\" prop.' + '%s%s See https://reactjs.org/link/warning-keys for more information.', currentComponentErrorInfo, childOwner);\n\n    setCurrentlyValidatingElement$1(null);\n  }\n}\n/**\n * Ensure that every element either is passed in a static location, in an\n * array with an explicit keys property defined, or in an object literal\n * with valid key property.\n *\n * @internal\n * @param {ReactNode} node Statically passed child of any type.\n * @param {*} parentType node's parent's type.\n */\n\n\nfunction validateChildKeys(node, parentType) {\n  if (typeof node !== 'object') {\n    return;\n  }\n\n  if (isArray(node)) {\n    for (var i = 0; i < node.length; i++) {\n      var child = node[i];\n\n      if (isValidElement(child)) {\n        validateExplicitKey(child, parentType);\n      }\n    }\n  } else if (isValidElement(node)) {\n    // This element was passed in a valid location.\n    if (node._store) {\n      node._store.validated = true;\n    }\n  } else if (node) {\n    var iteratorFn = getIteratorFn(node);\n\n    if (typeof iteratorFn === 'function') {\n      // Entry iterators used to provide implicit keys,\n      // but now we print a separate warning for them later.\n      if (iteratorFn !== node.entries) {\n        var iterator = iteratorFn.call(node);\n        var step;\n\n        while (!(step = iterator.next()).done) {\n          if (isValidElement(step.value)) {\n            validateExplicitKey(step.value, parentType);\n          }\n        }\n      }\n    }\n  }\n}\n/**\n * Given an element, validate that its props follow the propTypes definition,\n * provided by the type.\n *\n * @param {ReactElement} element\n */\n\n\nfunction validatePropTypes(element) {\n  {\n    var type = element.type;\n\n    if (type === null || type === undefined || typeof type === 'string') {\n      return;\n    }\n\n    var propTypes;\n\n    if (typeof type === 'function') {\n      propTypes = type.propTypes;\n    } else if (typeof type === 'object' && (type.$$typeof === REACT_FORWARD_REF_TYPE || // Note: Memo only checks outer props here.\n    // Inner props are checked in the reconciler.\n    type.$$typeof === REACT_MEMO_TYPE)) {\n      propTypes = type.propTypes;\n    } else {\n      return;\n    }\n\n    if (propTypes) {\n      // Intentionally inside to avoid triggering lazy initializers:\n      var name = getComponentNameFromType(type);\n      checkPropTypes(propTypes, element.props, 'prop', name, element);\n    } else if (type.PropTypes !== undefined && !propTypesMisspellWarningShown) {\n      propTypesMisspellWarningShown = true; // Intentionally inside to avoid triggering lazy initializers:\n\n      var _name = getComponentNameFromType(type);\n\n      error('Component %s declared `PropTypes` instead of `propTypes`. Did you misspell the property assignment?', _name || 'Unknown');\n    }\n\n    if (typeof type.getDefaultProps === 'function' && !type.getDefaultProps.isReactClassApproved) {\n      error('getDefaultProps is only used on classic React.createClass ' + 'definitions. Use a static property named `defaultProps` instead.');\n    }\n  }\n}\n/**\n * Given a fragment, validate that it can only be provided with fragment props\n * @param {ReactElement} fragment\n */\n\n\nfunction validateFragmentProps(fragment) {\n  {\n    var keys = Object.keys(fragment.props);\n\n    for (var i = 0; i < keys.length; i++) {\n      var key = keys[i];\n\n      if (key !== 'children' && key !== 'key') {\n        setCurrentlyValidatingElement$1(fragment);\n\n        error('Invalid prop `%s` supplied to `React.Fragment`. ' + 'React.Fragment can only have `key` and `children` props.', key);\n\n        setCurrentlyValidatingElement$1(null);\n        break;\n      }\n    }\n\n    if (fragment.ref !== null) {\n      setCurrentlyValidatingElement$1(fragment);\n\n      error('Invalid attribute `ref` supplied to `React.Fragment`.');\n\n      setCurrentlyValidatingElement$1(null);\n    }\n  }\n}\nfunction createElementWithValidation(type, props, children) {\n  var validType = isValidElementType(type); // We warn in this case but don't throw. We expect the element creation to\n  // succeed and there will likely be errors in render.\n\n  if (!validType) {\n    var info = '';\n\n    if (type === undefined || typeof type === 'object' && type !== null && Object.keys(type).length === 0) {\n      info += ' You likely forgot to export your component from the file ' + \"it's defined in, or you might have mixed up default and named imports.\";\n    }\n\n    var sourceInfo = getSourceInfoErrorAddendumForProps(props);\n\n    if (sourceInfo) {\n      info += sourceInfo;\n    } else {\n      info += getDeclarationErrorAddendum();\n    }\n\n    var typeString;\n\n    if (type === null) {\n      typeString = 'null';\n    } else if (isArray(type)) {\n      typeString = 'array';\n    } else if (type !== undefined && type.$$typeof === REACT_ELEMENT_TYPE) {\n      typeString = \"<\" + (getComponentNameFromType(type.type) || 'Unknown') + \" />\";\n      info = ' Did you accidentally export a JSX literal instead of a component?';\n    } else {\n      typeString = typeof type;\n    }\n\n    {\n      error('React.createElement: type is invalid -- expected a string (for ' + 'built-in components) or a class/function (for composite ' + 'components) but got: %s.%s', typeString, info);\n    }\n  }\n\n  var element = createElement.apply(this, arguments); // The result can be nullish if a mock or a custom function is used.\n  // TODO: Drop this when these are no longer allowed as the type argument.\n\n  if (element == null) {\n    return element;\n  } // Skip key warning if the type isn't valid since our key validation logic\n  // doesn't expect a non-string/function type and can throw confusing errors.\n  // We don't want exception behavior to differ between dev and prod.\n  // (Rendering will throw with a helpful message and as soon as the type is\n  // fixed, the key warnings will appear.)\n\n\n  if (validType) {\n    for (var i = 2; i < arguments.length; i++) {\n      validateChildKeys(arguments[i], type);\n    }\n  }\n\n  if (type === REACT_FRAGMENT_TYPE) {\n    validateFragmentProps(element);\n  } else {\n    validatePropTypes(element);\n  }\n\n  return element;\n}\nvar didWarnAboutDeprecatedCreateFactory = false;\nfunction createFactoryWithValidation(type) {\n  var validatedFactory = createElementWithValidation.bind(null, type);\n  validatedFactory.type = type;\n\n  {\n    if (!didWarnAboutDeprecatedCreateFactory) {\n      didWarnAboutDeprecatedCreateFactory = true;\n\n      warn('React.createFactory() is deprecated and will be removed in ' + 'a future major release. Consider using JSX ' + 'or use React.createElement() directly instead.');\n    } // Legacy hook: remove it\n\n\n    Object.defineProperty(validatedFactory, 'type', {\n      enumerable: false,\n      get: function () {\n        warn('Factory.type is deprecated. Access the class directly ' + 'before passing it to createFactory.');\n\n        Object.defineProperty(this, 'type', {\n          value: type\n        });\n        return type;\n      }\n    });\n  }\n\n  return validatedFactory;\n}\nfunction cloneElementWithValidation(element, props, children) {\n  var newElement = cloneElement.apply(this, arguments);\n\n  for (var i = 2; i < arguments.length; i++) {\n    validateChildKeys(arguments[i], newElement.type);\n  }\n\n  validatePropTypes(newElement);\n  return newElement;\n}\n\nvar ContextRegistry$1 = ReactSharedInternals.ContextRegistry;\nfunction createServerContext(globalName, defaultValue) {\n\n  var wasDefined = true;\n\n  if (!ContextRegistry$1[globalName]) {\n    wasDefined = false;\n    var _context = {\n      $$typeof: REACT_SERVER_CONTEXT_TYPE,\n      // As a workaround to support multiple concurrent renderers, we categorize\n      // some renderers as primary and others as secondary. We only expect\n      // there to be two concurrent renderers at most: React Native (primary) and\n      // Fabric (secondary); React DOM (primary) and React ART (secondary).\n      // Secondary renderers store their context values on separate fields.\n      _currentValue: defaultValue,\n      _currentValue2: defaultValue,\n      _defaultValue: defaultValue,\n      // Used to track how many concurrent renderers this context currently\n      // supports within in a single renderer. Such as parallel server rendering.\n      _threadCount: 0,\n      // These are circular\n      Provider: null,\n      Consumer: null,\n      _globalName: globalName\n    };\n    _context.Provider = {\n      $$typeof: REACT_PROVIDER_TYPE,\n      _context: _context\n    };\n\n    {\n      var hasWarnedAboutUsingConsumer;\n      _context._currentRenderer = null;\n      _context._currentRenderer2 = null;\n      Object.defineProperties(_context, {\n        Consumer: {\n          get: function () {\n            if (!hasWarnedAboutUsingConsumer) {\n              error('Consumer pattern is not supported by ReactServerContext');\n\n              hasWarnedAboutUsingConsumer = true;\n            }\n\n            return null;\n          }\n        }\n      });\n    }\n\n    ContextRegistry$1[globalName] = _context;\n  }\n\n  var context = ContextRegistry$1[globalName];\n\n  if (context._defaultValue === REACT_SERVER_CONTEXT_DEFAULT_VALUE_NOT_LOADED) {\n    context._defaultValue = defaultValue;\n\n    if (context._currentValue === REACT_SERVER_CONTEXT_DEFAULT_VALUE_NOT_LOADED) {\n      context._currentValue = defaultValue;\n    }\n\n    if (context._currentValue2 === REACT_SERVER_CONTEXT_DEFAULT_VALUE_NOT_LOADED) {\n      context._currentValue2 = defaultValue;\n    }\n  } else if (wasDefined) {\n    throw new Error(\"ServerContext: \" + globalName + \" already defined\");\n  }\n\n  return context;\n}\n\nfunction startTransition(scope, options) {\n  var prevTransition = ReactCurrentBatchConfig.transition;\n  ReactCurrentBatchConfig.transition = {};\n  var currentTransition = ReactCurrentBatchConfig.transition;\n\n  {\n    ReactCurrentBatchConfig.transition._updatedFibers = new Set();\n  }\n\n  try {\n    scope();\n  } finally {\n    ReactCurrentBatchConfig.transition = prevTransition;\n\n    {\n      if (prevTransition === null && currentTransition._updatedFibers) {\n        var updatedFibersCount = currentTransition._updatedFibers.size;\n\n        if (updatedFibersCount > 10) {\n          warn('Detected a large number of updates inside startTransition. ' + 'If this is due to a subscription please re-write it to use React provided hooks. ' + 'Otherwise concurrent mode guarantees are off the table.');\n        }\n\n        currentTransition._updatedFibers.clear();\n      }\n    }\n  }\n}\n\nvar didWarnAboutMessageChannel = false;\nvar enqueueTaskImpl = null;\nfunction enqueueTask(task) {\n  if (enqueueTaskImpl === null) {\n    try {\n      // read require off the module object to get around the bundlers.\n      // we don't want them to detect a require and bundle a Node polyfill.\n      var requireString = ('require' + Math.random()).slice(0, 7);\n      var nodeRequire = module && module[requireString]; // assuming we're in node, let's try to get node's\n      // version of setImmediate, bypassing fake timers if any.\n\n      enqueueTaskImpl = nodeRequire.call(module, 'timers').setImmediate;\n    } catch (_err) {\n      // we're in a browser\n      // we can't use regular timers because they may still be faked\n      // so we try MessageChannel+postMessage instead\n      enqueueTaskImpl = function (callback) {\n        {\n          if (didWarnAboutMessageChannel === false) {\n            didWarnAboutMessageChannel = true;\n\n            if (typeof MessageChannel === 'undefined') {\n              error('This browser does not have a MessageChannel implementation, ' + 'so enqueuing tasks via await act(async () => ...) will fail. ' + 'Please file an issue at https://github.com/facebook/react/issues ' + 'if you encounter this warning.');\n            }\n          }\n        }\n\n        var channel = new MessageChannel();\n        channel.port1.onmessage = callback;\n        channel.port2.postMessage(undefined);\n      };\n    }\n  }\n\n  return enqueueTaskImpl(task);\n}\n\n// number of `act` scopes on the stack.\n\nvar actScopeDepth = 0; // We only warn the first time you neglect to await an async `act` scope.\n\nvar didWarnNoAwaitAct = false;\nfunction act(callback) {\n  {\n    // When ReactCurrentActQueue.current is not null, it signals to React that\n    // we're currently inside an `act` scope. React will push all its tasks to\n    // this queue instead of scheduling them with platform APIs.\n    //\n    // We set this to an empty array when we first enter an `act` scope, and\n    // only unset it once we've left the outermost `act` scope — remember that\n    // `act` calls can be nested.\n    //\n    // If we're already inside an `act` scope, reuse the existing queue.\n    var prevIsBatchingLegacy = ReactCurrentActQueue.isBatchingLegacy;\n    var prevActQueue = ReactCurrentActQueue.current;\n    var prevActScopeDepth = actScopeDepth;\n    actScopeDepth++;\n    var queue = ReactCurrentActQueue.current = prevActQueue !== null ? prevActQueue : []; // Used to reproduce behavior of `batchedUpdates` in legacy mode. Only\n    // set to `true` while the given callback is executed, not for updates\n    // triggered during an async event, because this is how the legacy\n    // implementation of `act` behaved.\n\n    ReactCurrentActQueue.isBatchingLegacy = true;\n    var result; // This tracks whether the `act` call is awaited. In certain cases, not\n    // awaiting it is a mistake, so we will detect that and warn.\n\n    var didAwaitActCall = false;\n\n    try {\n      // Reset this to `false` right before entering the React work loop. The\n      // only place we ever read this fields is just below, right after running\n      // the callback. So we don't need to reset after the callback runs.\n      ReactCurrentActQueue.didScheduleLegacyUpdate = false;\n      result = callback();\n      var didScheduleLegacyUpdate = ReactCurrentActQueue.didScheduleLegacyUpdate; // Replicate behavior of original `act` implementation in legacy mode,\n      // which flushed updates immediately after the scope function exits, even\n      // if it's an async function.\n\n      if (!prevIsBatchingLegacy && didScheduleLegacyUpdate) {\n        flushActQueue(queue);\n      } // `isBatchingLegacy` gets reset using the regular stack, not the async\n      // one used to track `act` scopes. Why, you may be wondering? Because\n      // that's how it worked before version 18. Yes, it's confusing! We should\n      // delete legacy mode!!\n\n\n      ReactCurrentActQueue.isBatchingLegacy = prevIsBatchingLegacy;\n    } catch (error) {\n      // `isBatchingLegacy` gets reset using the regular stack, not the async\n      // one used to track `act` scopes. Why, you may be wondering? Because\n      // that's how it worked before version 18. Yes, it's confusing! We should\n      // delete legacy mode!!\n      ReactCurrentActQueue.isBatchingLegacy = prevIsBatchingLegacy;\n      popActScope(prevActQueue, prevActScopeDepth);\n      throw error;\n    }\n\n    if (result !== null && typeof result === 'object' && // $FlowFixMe[method-unbinding]\n    typeof result.then === 'function') {\n      // A promise/thenable was returned from the callback. Wait for it to\n      // resolve before flushing the queue.\n      //\n      // If `act` were implemented as an async function, this whole block could\n      // be a single `await` call. That's really the only difference between\n      // this branch and the next one.\n      var thenable = result; // Warn if the an `act` call with an async scope is not awaited. In a\n      // future release, consider making this an error.\n\n      queueSeveralMicrotasks(function () {\n        if (!didAwaitActCall && !didWarnNoAwaitAct) {\n          didWarnNoAwaitAct = true;\n\n          error('You called act(async () => ...) without await. ' + 'This could lead to unexpected testing behaviour, ' + 'interleaving multiple act calls and mixing their ' + 'scopes. ' + 'You should - await act(async () => ...);');\n        }\n      });\n      return {\n        then: function (resolve, reject) {\n          didAwaitActCall = true;\n          thenable.then(function (returnValue) {\n            popActScope(prevActQueue, prevActScopeDepth);\n\n            if (prevActScopeDepth === 0) {\n              // We're exiting the outermost `act` scope. Flush the queue.\n              try {\n                flushActQueue(queue);\n                enqueueTask(function () {\n                  return (// Recursively flush tasks scheduled by a microtask.\n                    recursivelyFlushAsyncActWork(returnValue, resolve, reject)\n                  );\n                });\n              } catch (error) {\n                // `thenable` might not be a real promise, and `flushActQueue`\n                // might throw, so we need to wrap `flushActQueue` in a\n                // try/catch.\n                reject(error);\n              }\n            } else {\n              resolve(returnValue);\n            }\n          }, function (error) {\n            popActScope(prevActQueue, prevActScopeDepth);\n            reject(error);\n          });\n        }\n      };\n    } else {\n      var returnValue = result; // The callback is not an async function. Exit the current\n      // scope immediately.\n\n      popActScope(prevActQueue, prevActScopeDepth);\n\n      if (prevActScopeDepth === 0) {\n        // We're exiting the outermost `act` scope. Flush the queue.\n        flushActQueue(queue); // If the queue is not empty, it implies that we intentionally yielded\n        // to the main thread, because something suspended. We will continue\n        // in an asynchronous task.\n        //\n        // Warn if something suspends but the `act` call is not awaited.\n        // In a future release, consider making this an error.\n\n        if (queue.length !== 0) {\n          queueSeveralMicrotasks(function () {\n            if (!didAwaitActCall && !didWarnNoAwaitAct) {\n              didWarnNoAwaitAct = true;\n\n              error('A component suspended inside an `act` scope, but the ' + '`act` call was not awaited. When testing React ' + 'components that depend on asynchronous data, you must ' + 'await the result:\\n\\n' + 'await act(() => ...)');\n            }\n          });\n        } // Like many things in this module, this is next part is confusing.\n        //\n        // We do not currently require every `act` call that is passed a\n        // callback to be awaited, through arguably we should. Since this\n        // callback was synchronous, we need to exit the current scope before\n        // returning.\n        //\n        // However, if thenable we're about to return *is* awaited, we'll\n        // immediately restore the current scope. So it shouldn't observable.\n        //\n        // This doesn't affect the case where the scope callback is async,\n        // because we always require those calls to be awaited.\n        //\n        // TODO: In a future version, consider always requiring all `act` calls\n        // to be awaited, regardless of whether the callback is sync or async.\n\n\n        ReactCurrentActQueue.current = null;\n      }\n\n      return {\n        then: function (resolve, reject) {\n          didAwaitActCall = true;\n\n          if (prevActScopeDepth === 0) {\n            // If the `act` call is awaited, restore the queue we were\n            // using before (see long comment above) so we can flush it.\n            ReactCurrentActQueue.current = queue;\n            enqueueTask(function () {\n              return (// Recursively flush tasks scheduled by a microtask.\n                recursivelyFlushAsyncActWork(returnValue, resolve, reject)\n              );\n            });\n          } else {\n            resolve(returnValue);\n          }\n        }\n      };\n    }\n  }\n}\n\nfunction popActScope(prevActQueue, prevActScopeDepth) {\n  {\n    if (prevActScopeDepth !== actScopeDepth - 1) {\n      error('You seem to have overlapping act() calls, this is not supported. ' + 'Be sure to await previous act() calls before making a new one. ');\n    }\n\n    actScopeDepth = prevActScopeDepth;\n  }\n}\n\nfunction recursivelyFlushAsyncActWork(returnValue, resolve, reject) {\n  {\n    // Check if any tasks were scheduled asynchronously.\n    var queue = ReactCurrentActQueue.current;\n\n    if (queue !== null) {\n      if (queue.length !== 0) {\n        // Async tasks were scheduled, mostly likely in a microtask.\n        // Keep flushing until there are no more.\n        try {\n          flushActQueue(queue); // The work we just performed may have schedule additional async\n          // tasks. Wait a macrotask and check again.\n\n          enqueueTask(function () {\n            return recursivelyFlushAsyncActWork(returnValue, resolve, reject);\n          });\n        } catch (error) {\n          // Leave remaining tasks on the queue if something throws.\n          reject(error);\n        }\n      } else {\n        // The queue is empty. We can finish.\n        ReactCurrentActQueue.current = null;\n        resolve(returnValue);\n      }\n    } else {\n      resolve(returnValue);\n    }\n  }\n}\n\nvar isFlushing = false;\n\nfunction flushActQueue(queue) {\n  {\n    if (!isFlushing) {\n      // Prevent re-entrance.\n      isFlushing = true;\n      var i = 0;\n\n      try {\n        for (; i < queue.length; i++) {\n          var callback = queue[i];\n\n          do {\n            ReactCurrentActQueue.didUsePromise = false;\n            var continuation = callback(false);\n\n            if (continuation !== null) {\n              if (ReactCurrentActQueue.didUsePromise) {\n                // The component just suspended. Yield to the main thread in\n                // case the promise is already resolved. If so, it will ping in\n                // a microtask and we can resume without unwinding the stack.\n                queue[i] = callback;\n                queue.splice(0, i);\n                return;\n              }\n\n              callback = continuation;\n            } else {\n              break;\n            }\n          } while (true);\n        } // We flushed the entire queue.\n\n\n        queue.length = 0;\n      } catch (error) {\n        // If something throws, leave the remaining callbacks on the queue.\n        queue.splice(0, i + 1);\n        throw error;\n      } finally {\n        isFlushing = false;\n      }\n    }\n  }\n} // Some of our warnings attempt to detect if the `act` call is awaited by\n// checking in an asynchronous task. Wait a few microtasks before checking. The\n// only reason one isn't sufficient is we want to accommodate the case where an\n// `act` call is returned from an async function without first being awaited,\n// since that's a somewhat common pattern. If you do this too many times in a\n// nested sequence, you might get a warning, but you can always fix by awaiting\n// the call.\n//\n// A macrotask would also work (and is the fallback) but depending on the test\n// environment it may cause the warning to fire too late.\n\n\nvar queueSeveralMicrotasks = typeof queueMicrotask === 'function' ? function (callback) {\n  queueMicrotask(function () {\n    return queueMicrotask(callback);\n  });\n} : enqueueTask;\n\nvar createElement$1 =  createElementWithValidation ;\nvar cloneElement$1 =  cloneElementWithValidation ;\nvar createFactory =  createFactoryWithValidation ;\nvar Children = {\n  map: mapChildren,\n  forEach: forEachChildren,\n  count: countChildren,\n  toArray: toArray,\n  only: onlyChild\n};\n\nexports.Children = Children;\nexports.Component = Component;\nexports.Fragment = REACT_FRAGMENT_TYPE;\nexports.Profiler = REACT_PROFILER_TYPE;\nexports.PureComponent = PureComponent;\nexports.StrictMode = REACT_STRICT_MODE_TYPE;\nexports.Suspense = REACT_SUSPENSE_TYPE;\nexports.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED = ReactSharedInternals;\nexports.cache = cache;\nexports.cloneElement = cloneElement$1;\nexports.createContext = createContext;\nexports.createElement = createElement$1;\nexports.createFactory = createFactory;\nexports.createRef = createRef;\nexports.createServerContext = createServerContext;\nexports.forwardRef = forwardRef;\nexports.isValidElement = isValidElement;\nexports.lazy = lazy;\nexports.memo = memo;\nexports.startTransition = startTransition;\nexports.unstable_act = act;\nexports.unstable_useCacheRefresh = useCacheRefresh;\nexports.use = use;\nexports.useCallback = useCallback;\nexports.useContext = useContext;\nexports.useDebugValue = useDebugValue;\nexports.useDeferredValue = useDeferredValue;\nexports.useEffect = useEffect;\nexports.useId = useId;\nexports.useImperativeHandle = useImperativeHandle;\nexports.useInsertionEffect = useInsertionEffect;\nexports.useLayoutEffect = useLayoutEffect;\nexports.useMemo = useMemo;\nexports.useReducer = useReducer;\nexports.useRef = useRef;\nexports.useState = useState;\nexports.useSyncExternalStore = useSyncExternalStore;\nexports.useTransition = useTransition;\nexports.version = ReactVersion;\n          /* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */\nif (\n  typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== 'undefined' &&\n  typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop ===\n    'function'\n) {\n  __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop(new Error());\n}\n        \n  })();\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}